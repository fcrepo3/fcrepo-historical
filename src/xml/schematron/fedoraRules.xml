<?xml version="1.0" encoding="UTF-8"?>
<sch:schema xmlns:sch="http://www.ascc.net/xml/schematron">
	<sch:ns prefix="METS" uri="http://www.loc.gov/METS/"/>
	<sch:phase id="ingest">
            <sch:active pattern="submission"/>
      </sch:phase>
      	<sch:phase id="store">
            <sch:active pattern="created"/>
      </sch:phase>
      	<sch:pattern name="Ingest Package Checks" id="submission">
      		<!-- FIGURE OUT: how to validate the namespace prefix declaration-->
		<sch:rule context="METS:mets">
			<sch:assert test="@TYPE = 'FedoraObject' or @TYPE = 'FedoraBDefObject' or @TYPE = 'FedoraBMechObject'">Ingest Phase: Object must be of type "FedoraObject," "FedoraBDefObject," or "FedoraBMechObject" (element mets: TYPE)</sch:assert>
		</sch:rule>
		<sch:rule context="METS:fileSec">
			<sch:assert test="count(METS:fileGrp) = 1">Ingest Phase: Object fileSec must not have greater than one file group</sch:assert>
			<sch:assert test="METS:fileGrp[@ID='DATASTREAMS']">Ingest Phase: Object must have one fileGrp whose ID is "DATASTREAMS"</sch:assert>
		</sch:rule>
	</sch:pattern>
	<sch:pattern name="Completed Object Checks" id="created">
		<!-- FIGURE OUT: how to validate the namespace prefix declaration-->
		<sch:rule context="METS:mets">
			<sch:assert test="string(@OBJID)">Created Phase: Object must have a PID (element mets: OBJID is missing or empty)</sch:assert>
			<sch:assert test="@TYPE = 'FedoraObject' or @TYPE = 'FedoraBDefObject' or @TYPE = 'FedoraBMechObject'">Created Phase: Object must be of type "FedoraObject," "FedoraBDefObject," or "FedoraBMechObject" (element mets: TYPE)</sch:assert>
			<sch:assert test="METS:amdSec[@ID='FEDORA-AUDITTRAIL']">Created Phase: Object must have an audit trail (element amdSec: ID="FEDORA-AUDITTRAIL)</sch:assert>
		</sch:rule>
		<sch:rule context="METS:fileSec">
			<sch:assert test="count(METS:fileGrp) = 1">Created Phase: Object file section (element fileSec) must not have greater than one file group (element fileGrp)</sch:assert>
			<sch:assert test="METS:fileGrp[@ID='DATASTREAMS']">Created Phase: Object must have one file group reserved for Datastreams (element fileGrp:  ID="DATASTREAMS")</sch:assert>
		</sch:rule>
		<sch:rule context="METS:metsHdr">
			<sch:assert test="@CREATEDATE">Created Phase: Object must have a date of creation (element header: CREATEDATE missing)</sch:assert>
			<sch:assert test="@RECORDSTATUS">Created Phase: Object state must be recorded (element header: RECORDSTATUS missing)</sch:assert>
			<sch:assert test="@RECORDSTATUS ='A'">Created Phase: Object state must be set to active  (element header: RECORDSTATUS="A")</sch:assert>
		</sch:rule>
	</sch:pattern>
</sch:schema>
