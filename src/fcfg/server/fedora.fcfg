<?xml version="1.0" encoding="UTF-8"?>
<server xmlns="http://www.fedora.info/definitions/1/0/config/" 
        xmlns:fedora-config="http://www.fedora.info/definitions/1/0/config/" 
        class="fedora.server.BasicServer">
	<param name="adminPassword" value="fedoraAdmin"/>
	<param name="log_max_size" value="5242880"/>
	<param name="log_max_days" value="7"/>
	<param name="log_dir" value="logs"/>
	<param name="log_level" value="finest"/>
	<param name="log_flush_threshold" value="1"/>
	<param name="path_algorithm" value="fedora.server.storage.lowlevel.TimestampPathAlgorithm"/>
	<param name="file_system" value="fedora.server.storage.lowlevel.GenericFileSystem"/>
	<param name="backslash_is_escape" value="yes" oraclevalue="no"/>
	<param name="store_base" value="C:\fedora_perm"/>
	<param name="temp_store_base" value="C:\fedora_temp"/>
	<param name="pid_registry" value="fedora.server.storage.lowlevel.DBPathRegistry"/>
	<param name="temp_registry" value="fedora.server.storage.lowlevel.DBPathRegistry"/>
	<param name="disseminationCacheSize" value="100"/>
	<param name="debug" value="true"/>
	<param name="datastreamExpirationLimit" value="300"/>
	<param name="datastreamMediationLimit" value="5000"/>
	<param name="fedoraServerPort" value="8080"/>
	<module role="fedora.server.storage.DOManager" class="fedora.server.storage.DefaultDOManager">
		<comment>
        Description:
          The interface to the storage subsystem.  This provides
          context-appropriate DOReaders and DOWriters for reflecting on and 
          writing to the objects stored in the repository.  It also
          provides methods for reflecting on the contents of the repository 
          as a whole.  This implementation uses DefinitiveDOReader/Writer
          for an "application" of "apim" and a FastDOReader/Writer
          for an "application" of "apia" (from the Context).  Other
          context-specific logic TBD. 
        Parameters:
        - pidNamespace (required)
          This is the namespace id for pids of newly-created objects.
          This should be unique for a repository.
          It can be from 1 to 17 characters, and may only contain
          A-Z, a-z, 0-9, and '-' (dash).
        - storagePool [default=default provided by the ConnectionPoolManager]
          The named connection pool from which read/write
          database connections are to be provided for the storage
          subsystem (see the ConnectionPoolManager module)
        - storageFormat (required)
          The format in which serializations of digital objects
          are to be written.  There must exist a correspondingly
          named serializer-deserializer pair in the DOTranslator module.
        - storageCharacterEncoding [default=UTF-8]
          If the serialization format is text-based, 
          this is the character encoding that should be used.</comment>
		<param name="pidNamespace" value="test"/>
		<param name="storagePool" value="localMySQLPool" mckoivalue="localMcKoiPool" oraclevalue="localOracle9iPool" icarusvalue="remoteMySQLPool"/>
		<param name="storageFormat" value="metslikefedora1"/>
		<param name="storageCharacterEncoding" value="UTF-8"/>
	</module>
	<module role="fedora.server.management.Management" class="fedora.server.management.DefaultManagement">
		<comment>
        Description:
          The management subsystem.
          This implements the methods necessary to fulfill API-M 
          requests without regard to:
            - how the service is exposed
            - how bytestreams and java types might be marshalled/demarshalled 
              over the wire
            - how the storage subsystem is implemented.
        Parameters:
            - allowHosts (optional)
              A comma-separated list of IP ranges that the client's address 
              is compared to. If this is specified, the remote address 
              must match for any Management request to be accepted. 
              If this is not specified, all requests will be accepted unless 
              the remote address matches a deny pattern.
            - denyHosts (optional)
              A comma-separated list of IP ranges that the client's address 
              is compared to. If this is specified, the remote address 
              must not match for any Management request to be accepted. 
              If this is not specified, request acceptance is governed 
              solely by the allowHosts parameter.
        </comment>
		<param name="allowHosts" value="127.0.0.1" />
	</module>
    <module role="fedora.server.access.Access" class="fedora.server.access.DefaultAccess">
        <comment>
        Description:
          The access subsystem.
          This implements the methods necessary to fulfill API-A
          requests without regard to:
            - how the service is exposed
            - how bytestreams and java types might be marshalled/demarshalled 
              over the wire
            - how the storage subsystem is implemented.
        Parameters:
            - allowHosts (optional)
              A comma-separated list of IP ranges that the client's address 
              is compared to. If this is specified, the remote address 
              must match for any Management request to be accepted. 
              If this is not specified, all requests will be accepted unless 
              the remote address matches a deny pattern.
            - denyHosts (optional)
              A comma-separated list of IP ranges that the client's address 
              is compared to. If this is specified, the remote address 
              must not match for any Management request to be accepted. 
              If this is not specified, request acceptance is governed 
              solely by the allowHosts parameter.
            </comment>
    </module>
    <module role="fedora.server.search.FieldSearch"
           class="fedora.server.search.FieldSearchExistModule">
        <comment>Supports the API-A simpleSearch and advancedSearch methods.</comment>
    </module>
	<module role="fedora.server.storage.translation.DOTranslator"
           class="fedora.server.storage.translation.DOTranslatorModule">
		<comment>Supports translation from DigitalObject to a stream of 
        some format, and vice-versa.  The parameters below specify 
        serializer/deserializer classes to be used for a given format.
        Those classes must implement the DOSerializer/DODeserializer
        interfaces.
        </comment>
		<param name="serializer_metslikefedora1" 
                      value="fedora.server.storage.translation.METSLikeDOSerializer"/>
		<param name="deserializer_metslikefedora1" 
                      value="fedora.server.storage.translation.METSLikeDODeserializer"/>
	</module>
	<module role="fedora.server.management.PIDGenerator" class="fedora.server.management.BasicPIDGenerator">
		<comment>The pid generator.</comment>
		<param name="pidgen_log_dir" value="pidgen"/>
	</module>
	<module role="fedora.server.storage.replication.DOReplicator" class="fedora.server.storage.replication.DefaultDOReplicator">
		<comment>Supports synching data from definitive storage with 
        dissemination db.</comment>
	</module>
	<module role="fedora.server.storage.ConnectionPoolManager" class="fedora.server.storage.ConnectionPoolManagerImpl">
		<comment>This module facilitates obtaining ConnectionPools</comment>
		<param name="defaultPoolName" value="localMySQLPool" mckoivalue="localMcKoiPool" oraclevalue="localOracle9iPool" icarusvalue="remoteMySQLPool"/>
		<param name="poolNames" value="localMySQLPool" mckoivalue="localMcKoiPool"  oraclevalue="localOracle9iPool" icarusvalue="remoteMySQLPool"/>
	</module>
	<module role="fedora.server.validation.DOValidator" class="fedora.server.validation.DOValidatorModule">
		<comment>
		Description:  
		Supports validation of digital objects, including XML Schema validation (to METS schema),
		Schematron validation (to Fedora Rules schema written in Schematron language), and (in future) other programatic validation 
		including referential integrity checking of existence and availability of distributed data and/or services.
		 Parameters:
		  - tempDir  (required):  this is a directory that the validation module can use as a work space, as when it must
		  write a temporary file.
		  - xmlSchemaID: this is official URI for the Fedora-METS XML schema used to do XML schema validation of digital objects
		  - xmlSchemaLocalPath:  this is an alternative local storage location for the Fedora-METS XML schema 
		  - schematronPreprocessorID:  this is the "skeleton" style sheet for schematron processing
		  - schematronSchemaID:  this is the Fedora Schematron Schema used to do Fedora-specific validation of digital objects.
		  This schema expresses integrity rules which are not covered by the Fedora-METS XML schema.
		  - schematronValidationgXslID: this is the stable path name for the validating stylesheet that is generated by Schematron
		  to enforce the Fedora Schematron Schema.  The validating stylesheet is created every time the server starts up to prevent
		  having to create it anew each time a digital object is validated.
        </comment>
		<param name="tempDir" value="/work"/>
		<param name="xmlSchemaURL" value="http://localhost:8080/mets-fedora-ext.xsd"/>
		<param name="xmlSchemaLocalPath" value="/xsd/mets-fedora.xsd"/>
		<param name="schematronPreprocessor" value="/schematron/preprocessor.xslt"/>
		<param name="schematronSchema" value="/schematron/fedoraRulesExt.xml"/>
		<param name="schematronValidatingXsl" value="/schematron/fedoraValidator.xslt"/>
	</module>
	<module role="fedora.server.storage.ExternalContentManager" class="fedora.server.storage.DefaultExternalContentManager">
		<comment>This module facilitates obtaining external content via HTTP</comment>
	</module>
	<datastore id="remoteMySQLPool">
		<comment>MySQL database on UVA test host (known to work)</comment>
		<param name="dbUsername" value="fedoraAdmin"/>
		<param name="dbPassword" value="fedoraAdmin"/>
		<param name="jdbcURL" value="jdbc:mysql://icarus.lib.virginia.edu:3306/FedoraObjectsTest"/>
		<param name="jdbcDriverClass" value="org.gjt.mm.mysql.Driver"/>
		<param name="ddlConverter" value="fedora.server.utilities.MySQLDDLConverter"/>
		<param name="minPoolSize" value="10"/>
		<param name="maxPoolSize" value="100"/>
	</datastore>
	<datastore id="localMySQLPool">
		<comment>MySQL database on localhost</comment>
		<param name="dbUsername" value="fedoraAdmin"/>
		<param name="dbPassword" value="fedoraAdmin"/>
		<param name="jdbcURL" value="jdbc:mysql://localhost/FedoraObjects"/>
		<param name="jdbcDriverClass" value="org.gjt.mm.mysql.Driver"/>
		<param name="ddlConverter" value="fedora.server.utilities.MySQLDDLConverter"/>
		<param name="minPoolSize" value="10"/>
		<param name="maxPoolSize" value="100"/>
	</datastore>
	<datastore id="localMcKoiPool">
		<comment>McKoi database on localhost</comment>
		<param name="dbUsername" value="fedoraAdmin"/>
		<param name="dbPassword" value="fedoraAdmin"/>
		<param name="jdbcURL" value="jdbc:mckoi://localhost/"/>
		<param name="jdbcDriverClass" value="com.mckoi.JDBCDriver"/>
		<param name="ddlConverter" value="fedora.server.utilities.McKoiDDLConverter"/>
		<param name="minPoolSize" value="10"/>
		<param name="maxPoolSize" value="100"/>
	</datastore>
	<datastore id="localOracle9iPool">
		<comment>Oracle9i database on localhost with SID=Fedora</comment>
		<param name="dbUsername" value="fedoraAdmin"/>
		<param name="dbPassword" value="fedoraAdmin"/>
		<param name="jdbcURL" value="jdbc:oracle:thin:@localhost:1521:Fedora"/>
		<param name="jdbcDriverClass" value="oracle.jdbc.driver.OracleDriver"/>
		<param name="ddlConverter" value="fedora.server.utilities.OracleDDLConverter"/>
		<param name="minPoolSize" value="10"/>
		<param name="maxPoolSize" value="100"/>
	</datastore>
</server>
