<?xml version="1.0" encoding="UTF-8"?>
<!--  $Id$ -->
<project name="Fedora" default="serverdist" basedir=".">
	<description>The Fedora Project </description>
	<!-- set global properties for this build -->
	<property name="build.debug" value="on"/>
	<property name="build.optimize" value="off"/>
	<property name="src.dir" location="src"/>
	<property name="src.java.dir" location="${src.dir}/java"/>
	<property name="build.dir" location="build"/>
	<property name="dist.dir" location="dist"/>
	<property name="lib.dir" location="lib"/>
	<property name="release.dir" location="${dist.dir}/release"/>
	<property name="server.dist.dir" location="${dist.dir}/server"/>
	<property name="properties.dir" location="${src.dir}/properties"/>
	<!-- load external properties files -->
	<loadproperties srcFile="${properties.dir}/lib.properties"/>
	<loadproperties srcFile="${properties.dir}/mckoi.properties"/>
	<loadproperties srcFile="${properties.dir}/tomcat.properties"/>
	<loadproperties srcFile="${properties.dir}/server/fedora/server/resources/Server.properties">
		<filterchain>
			<linecontains>
				<contains value="version."/>
			</linecontains>
		</filterchain>
	</loadproperties>
	<!-- get the version of Fedora -->
	<property name="fedora.version" value="${version.major}.${version.minor}"/>
	<property name="fedora.releaseDate" value="${version.releaseDate}"/>
	<!-- 
        The following pattern of <pathconvert> and <fileset> declarations 
        take a set of jar files, and:
            1. create a path, suitable for classpath declarations
            2. create a comma-separated list of just the file names
            3. create a fileset, suitable for copying to release locations
    -->
	<pathconvert pathsep="," property="server-libs.list">
		<path id="server-libs.path">
			<pathelement location="${lib.avalon-framework}"/>
			<pathelement location="${lib.batik}"/>
			<pathelement location="${lib.cos}"/>
			<pathelement location="${lib.fop}"/>
			<pathelement location="${lib.ij}"/>
			<pathelement location="${lib.jai_codec}"/>
			<pathelement location="${lib.jai_core}"/>
			<pathelement location="${lib.md5}"/>
			<pathelement location="${lib.jena}"/>
			<pathelement location="${lib.kowari-driver}"/>
			<pathelement location="${lib.trippi}"/>
			<pathelement location="${lib.rio}"/>
			<pathelement location="${lib.xmlpull}"/>
			<pathelement location="${lib.xpp3}"/>
			<pathelement location="${lib.activation}"/>
			<pathelement location="${lib.castor}"/>
			<pathelement location="${lib.lucene}"/>
			<pathelement location="${lib.log4j}"/>
			<pathelement location="${lib.oro}"/>
			<pathelement location="${lib.trove}"/>
		</path>
		<map from="${lib.dir}${file.separator}" to=""/>
	</pathconvert>
	<fileset dir="${lib.dir}" id="server-libs.fileset" includes="${server-libs.list}"/>
	<pathconvert pathsep="," property="client-libs.list">
		<path id="client-libs.path">
			<pathelement location="${lib.axis}"/>
			<pathelement location="${lib.batik}"/>
			<pathelement location="${lib.commons-discovery}"/>
			<pathelement location="${lib.commons-httpclient}"/>
			<pathelement location="${lib.commons-logging}"/>
			<pathelement location="${lib.getopt}"/>
			<pathelement location="${lib.jai_codec}"/>
			<pathelement location="${lib.jai_core}"/>
			<pathelement location="${lib.jaxrpc}"/>
			<pathelement location="${lib.jrdf}"/>
			<pathelement location="${lib.saaj}"/>
			<pathelement location="${lib.saxon}"/>
			<pathelement location="${lib.wsdl4j}"/>
			<pathelement location="${lib.xerces}"/>
			<pathelement location="${lib.xml-apis}"/>
		</path>
		<map from="${lib.dir}${file.separator}" to=""/>
	</pathconvert>
	<fileset dir="${lib.dir}" id="client-libs.fileset" includes="${client-libs.list}"/>
	<path id="localservices-lib.path">
		<pathelement location="${lib.avalon-framework}"/>
		<pathelement location="${lib.batik}"/>
		<pathelement location="${lib.commons-httpclient}"/>
		<pathelement location="${lib.fop}"/>
		<pathelement location="${lib.ij}"/>
		<pathelement location="${lib.jai_codec}"/>
		<pathelement location="${lib.jai_core}"/>
		<pathelement location="${lib.saxon}"/>
		<pathelement location="${lib.servlet}"/>
	</path>
	<path id="serverclasses-lib.path">
		<pathelement location="${lib.axis}"/>
		<pathelement location="${lib.commons-logging}"/>
		<pathelement location="${lib.cos}"/>
		<pathelement location="${lib.jaxrpc}"/>
		<pathelement location="${lib.jena}"/>
		<pathelement location="${lib.junit}"/>
		<pathelement location="${lib.kowari-driver}"/>
		<pathelement location="${lib.trippi}"/>
		<pathelement location="${lib.rio}"/>
		<pathelement location="${lib.xmlpull}"/>
		<pathelement location="${lib.xpp3}"/>
		<pathelement location="${lib.md5}"/>
		<pathelement location="${lib.saxon}"/>
		<pathelement location="${lib.servlet}"/>
		<pathelement location="${lib.wsdl4j}"/>
		<pathelement location="${lib.xerces}"/>
		<pathelement location="${lib.xml-apis}"/>
	</path>
	<!-- Set up the classpath arguments to be inserted into the Fedora startup scripts -->
	<path id="AxisUtility-libs.path">
		<pathelement location="${lib.axis}"/>
		<pathelement location="${lib.commons-discovery}"/>
		<pathelement location="${lib.commons-logging}"/>
		<pathelement location="${lib.jaxrpc}"/>
		<pathelement location="${lib.saaj}"/>
		<pathelement location="${lib.tt-bytecode}"/>
		<pathelement location="${lib.wsdl4j}"/>
		<pathelement location="${lib.xerces}"/>
		<pathelement location="${lib.xml-apis}"/>
	</path>
	<!-- $TC_COMMON should not be interpreted by Ant. -->
	<pathconvert targetos="unix" property="AxisUtility.unix.libs" refid="AxisUtility-libs.path">
		<map from="${lib.dir}" to="$TC_COMMON"/>
	</pathconvert>
	<!-- %TC_COMMON% should not be interpreted by Ant. -->
	<pathconvert targetos="windows" property="AxisUtility.windows.libs" refid="AxisUtility-libs.path">
		<map from="${lib.dir}" to="%TC_COMMON%"/>
	</pathconvert>
	<path id="ServerController-libs.path">
		<pathelement location="${lib.servlet}"/>
	</path>
	<!-- $TC_COMMON should not be interpreted by Ant. -->
	<pathconvert targetos="unix" property="ServerController.unix.libs" refid="ServerController-libs.path">
		<map from="${lib.dir}" to="$TC_COMMON"/>
	</pathconvert>
	<!-- %TC_COMMON% should not be interpreted by Ant. -->
	<pathconvert targetos="windows" property="ServerController.windows.libs" refid="ServerController-libs.path">
		<map from="${lib.dir}" to="%TC_COMMON%"/>
	</pathconvert>
	<!-- targets -->
	<target name="serverandclient" depends="server,client,localservices" description="builds both client and server in dist/server">
	</target>
	<target name="release" depends="srcrelease,binrelease" description="puts all source and binary distributable packages in dist/release">
	</target>
	<target name="srcrelease" depends="clean" description="puts source distributable packages in dist/release">
		<mkdir dir="${dist.dir}"/>
		<mkdir dir="${release.dir}"/>
		<mkdir dir="${release.dir}/fedora-${fedora.version}-src"/>
		<copy todir="${release.dir}/fedora-${fedora.version}-src"/>
		<tar longfile="gnu" tarfile="${release.dir}/fedora-${fedora.version}-src.tar">
			<tarfileset dir="${release.dir}" mode="755">
				<include name="fedora-${fedora.version}-src/res/ant/bin/ant/**"/>
			</tarfileset>
			<tarfileset dir="${release.dir}">
				<include name="fedora-${fedora.version}-src/**"/>
				<exclude name="fedora-${fedora.version}-src/res/ant/bin/ant/**"/>
			</tarfileset>
		</tar>
		<gzip zipfile="${release.dir}/fedora-${fedora.version}-src.tar.gz" src="${release.dir}/fedora-${fedora.version}-src.tar"/>
		<delete file="${release.dir}/fedora-${fedora.version}-src.tar"/>
		<zip zipfile="${release.dir}/fedora-${fedora.version}-src.zip" basedir="${release.dir}" includes="fedora-${fedora.version}-src/**"/>
		<delete dir="${release.dir}/fedora-${fedora.version}-src"/>
	</target>
	<target name="binrelease" depends="binreleasewindows,binreleaseunix" description="puts binary distributable packages in dist/release">
		<delete dir="${release.dir}/fedora-${fedora.version}"/>
	</target>
	<target name="binreleaseunix" depends="binreleaseprep">
		<!-- server -->
		<tar longfile="gnu" tarfile="dist/release/fedora-${fedora.version}-server.tar">
			<tarfileset dir="${release.dir}" mode="755">
				<include name="fedora-${fedora.version}/server/bin/**"/>
			</tarfileset>
			<tarfileset dir="${release.dir}">
				<include name="fedora-${fedora.version}/server/**"/>
				<exclude name="fedora-${fedora.version}/server/bin/**"/>
			</tarfileset>
		</tar>
		<gzip zipfile="dist/release/fedora-${fedora.version}-server.tar.gz" src="${release.dir}/fedora-${fedora.version}-server.tar"/>
		<delete file="dist/release/fedora-${fedora.version}-server.tar"/>
		<!-- client -->
		<tar longfile="gnu" tarfile="dist/release/fedora-${fedora.version}-client.tar">
			<tarfileset dir="${release.dir}" mode="755">
				<include name="fedora-${fedora.version}/client/bin/**"/>
			</tarfileset>
			<tarfileset dir="${release.dir}">
				<include name="fedora-${fedora.version}/client/**"/>
				<exclude name="fedora-${fedora.version}/client/bin/**"/>
			</tarfileset>
		</tar>
		<gzip zipfile="${release.dir}/fedora-${fedora.version}-client.tar.gz" src="${release.dir}/fedora-${fedora.version}-client.tar"/>
		<delete file="${release.dir}/fedora-${fedora.version}-client.tar"/>
	</target>
	<target name="binreleasewindows" depends="binreleaseprep">
		<zip zipfile="${release.dir}/fedora-${fedora.version}-server.zip" basedir="${release.dir}" includes="fedora-${fedora.version}/server/**"/>
		<zip zipfile="${release.dir}/fedora-${fedora.version}-client.zip" basedir="${release.dir}" includes="fedora-${fedora.version}/client/**"/>
	</target>
	<target name="binreleaseprep" depends="serverdist" description="puts binary distributable packages in dist/release">
		<mkdir dir="${release.dir}"/>
		<mkdir dir="${release.dir}/fedora-${fedora.version}"/>
		<copy todir="${release.dir}/fedora-${fedora.version}">
			<fileset dir="dist">
				<include name="server/**"/>
				<include name="client/**"/>
			</fileset>
		</copy>
	</target>
	<target name="serverdist" depends="serverandclient,userdocs,serverdocs" description="a distribution of client and server, with documentation (suitable for release)">
		<copy todir="dist/server" file="LICENSE.TXT"/>
		<copy todir="dist/server" file="COPYRIGHT.TXT"/>
		<copy todir="dist/server" file="license.html"/>
		<copy todir="dist/server" file="copyright.html"/>
		<copy todir="dist/userdocs/distribution" file="license.html"/>
		<copy todir="dist/userdocs/distribution" file="copyright.html"/>
		<copy todir="${tomcat.deploy.dir}/userdocs/distribution" file="license.html"/>
		<copy todir="${tomcat.deploy.dir}/userdocs/distribution" file="copyright.html"/>
		<copy todir="dist/client" file="LICENSE.TXT"/>
		<copy todir="dist/client" file="COPYRIGHT.TXT"/>
		<copy todir="dist/client" file="license.html"/>
		<copy todir="dist/client" file="copyright.html"/>
		<mkdir dir="dist/server/userdocs"/>
		<copy todir="dist/server/userdocs">
			<fileset dir="dist/userdocs"/>
		</copy>
	</target>
	<target name="clientunixstuff" depends="clientmostly" if="buildingOnUnix">
		<!-- add symlinks for shell scripts in unix -->
		<exec dir="./dist/client/bin" executable="/bin/ln">
			<arg line="-s fedora-admin.sh fedora-admin"/>
		</exec>
		<exec dir="./dist/client/bin" executable="/bin/ln">
			<arg line="-s fedora-ingest.sh fedora-ingest"/>
		</exec>
		<exec dir="./dist/client/bin" executable="/bin/ln">
			<arg line="-s fedora-ingest-demos.sh fedora-ingest-demos"/>
		</exec>
		<exec dir="./dist/client/bin" executable="/bin/ln">
			<arg line="-s fedora-export.sh fedora-export"/>
		</exec>
		<exec dir="./dist/client/bin" executable="/bin/ln">
			<arg line="-s fedora-find.sh fedora-find"/>
		</exec>
		<exec dir="./dist/client/bin" executable="/bin/ln">
			<arg line="-s fedora-purge.sh fedora-purge"/>
		</exec>
		<exec dir="./dist/client/bin" executable="/bin/ln">
			<arg line="-s fedora-dsinfo.sh fedora-dsinfo"/>
		</exec>
		<exec dir="./dist/client/bin" executable="/bin/ln">
			<arg line="-s fedora-massingest.sh fedora-massingest"/>
		</exec>
		<exec dir="./dist/client/bin" executable="/bin/ln">
			<arg line="-s fedora-convert-demos.sh fedora-convert-demos"/>
		</exec>
		<exec dir="./dist/client/bin" executable="/bin/ln">
			<arg line="-s fedora-batch-build.sh fedora-batch-build"/>
		</exec>
		<exec dir="./dist/client/bin" executable="/bin/ln">
			<arg line="-s fedora-batch-ingest.sh fedora-batch-ingest"/>
		</exec>
		<exec dir="./dist/client/bin" executable="/bin/ln">
			<arg line="-s fedora-batch-buildingest.sh fedora-batch-buildingest"/>
		</exec>
		<!-- add execute permission to script files in distribution tree; this is only run in unix environments -->
		<chmod dir="dist/client/bin" perm="ugo+x" includes="**/*"/>
	</target>
	<target name="client" depends="clientunixstuff,clientmostly" description="Client distribution">
	</target>
	<target name="clientmostly" depends="clientclasses,clienthelp,clientimages,clientjarincludes" description="Client distribution">
		<condition property="buildingOnUnix">
			<os family="unix"/>
		</condition>
		<mkdir dir="dist/client/bin"/>
		<copy todir="dist/client/bin">
			<fileset dir="src/bat/client"/>
		</copy>
		<copy todir="dist/client/bin">
			<fileset dir="src/sh/client"/>
		</copy>
		<!-- Prepare demo objects (see datastream content for demos in target "servermostly") -->
		<mkdir dir="dist/client/demo"/>
		<mkdir dir="dist/client/demo/foxml"/>
		<mkdir dir="dist/client/demo/mets"/>
		<copy todir="dist/client/demo/foxml">
			<fileset dir="src/demo-objects/foxml"/>
		</copy>
		<copy todir="dist/client/demo/mets">
			<fileset dir="src/demo-objects/mets"/>
		</copy>
		<!-- Prepare batch demo-->
		<copy file="src/xsl/batchtool/merge.xsl" todir="dist/client/lib"/>
		<mkdir dir="dist/client/demo/batch-demo"/>
		<copy file="src/demo-objects/mets/batch-demo/mets-template.xml" todir="dist/client/demo/batch-demo"/>
		<copy todir="dist/client/demo/batch-demo/object-specifics">
			<fileset dir="src/xml/batch-demo/object-specifics"/>
		</copy>
		<mkdir dir="dist/client/demo/batch-demo/objects"/>
		<!-- Create the client manifest file -->
		<pathconvert pathsep=" " property="client.mfs.classpath" refid="client-libs.path">
			<map from="${lib.dir}${file.separator}" to="lib/"/>
		</pathconvert>
		<copy file="src/mfs/client.mfs" toFile="temp/client.mfs">
			<filterset>
				<filter token="client.mfs.classpath" value="${client.mfs.classpath}"/>
			</filterset>
		</copy>
		<jar jarfile="dist/client/client.jar" basedir="temp/client" manifest="temp/client.mfs"/>
		<mkdir dir="dist/client/lib"/>
		<copy todir="dist/client/lib">
			<fileset refid="client-libs.fileset"/>
		</copy>
		<echo message="Finished building client distribution in dist/client"/>
	</target>
	<target name="prep" description="Prepare a temporary build area for targets">
		<mkdir dir="temp"/>
	</target>
	<target name="utilclasses" depends="prep">
		<mkdir dir="temp/util"/>
		<javac srcdir="${src.java.dir}" destdir="temp/util" classpath="${lib.md5}" includes="fedora/utilities/**" optimize="${build.optimize}" debug="${build.debug}"/>
		<jar jarfile="temp/fedora-utilities.jar" basedir="temp/util"/>
	</target>
	<target name="makepatch" depends="utilclasses">
		<java classpath="${lib.md5};temp/fedora-utilities.jar" classname="fedora.utilities.MakePatch"/>
	</target>
	<target name="stubwrappers" depends="prep,utilclasses,wsdl2java" description="Builds API wrapper stubs">
		<mkdir dir="temp/clientgen"/>
		<mkdir dir="temp/clientgen/fedora"/>
		<mkdir dir="temp/clientgen/fedora/client"/>
		<!-- Stub wrapper for API-M -->
		<java classpath="temp/fedora-utilities.jar" classname="fedora.utilities.BuildAxisStubWrapper">
			<arg path="temp/server/java/fedora/server/management/FedoraAPIMBindingSOAPHTTPStub.java"/>
			<arg path="src/java/fedora/client/FedoraStubWrapper.template"/>
			<arg value="fedora.client"/>
			<arg value="APIMStubWrapper"/>
			<arg path="temp/clientgen/fedora/client/APIMStubWrapper.java"/>
		</java>
		<!-- Stub wrapper for API-A -->
		<java classpath="temp/fedora-utilities.jar" classname="fedora.utilities.BuildAxisStubWrapper">
			<arg path="temp/server/java/fedora/server/access/FedoraAPIABindingSOAPHTTPStub.java"/>
			<arg path="src/java/fedora/client/FedoraStubWrapper.template"/>
			<arg value="fedora.client"/>
			<arg value="APIAStubWrapper"/>
			<arg path="temp/clientgen/fedora/client/APIAStubWrapper.java"/>
		</java>
	</target>
	<target name="clientprep" depends="prep" description="Prepare a temporary build area for client-related targets">
		<mkdir dir="temp/client"/>
	</target>
	<target name="clientclasses" depends="clientprep,wsdl2java,stubwrappers" description="Compile client java code into temp/client">
		<javac srcdir="${src.java.dir}:temp/server/java:temp/clientgen" destdir="temp/client" classpath="${lib.xerces};${lib.jhbasic};${lib.getopt};${lib.saxon};${lib.axis};${lib.wsdl4j};${lib.jaxrpc};${lib.commons-discovery};${lib.commons-logging};${lib.saaj};${lib.commons-httpclient};${lib.jai_core};${lib.jai_codec};${lib.batik};${lib.jrdf}" includes="fedora/server/management/APIMStub.java,fedora/swing/mdi/**,fedora/swing/jhelp/**,fedora/swing/jtable/**,fedora/client/**,fedora/server/utilities/MethodInvokerThread.java,fedora/server/utilities/StreamUtility.java,fedora/server/management/FedoraAPIMBindingSOAPHTTPStub.java,fedora/server/access/FedoraAPIABindingSOAPHTTPStub.java,fedora/common/**" optimize="${build.optimize}" debug="${build.debug}"/>
	</target>
	<target name="clienthelp" depends="clientprep" description="Assemble JavaHelp for client into temp/client/help">
		<mkdir dir="temp/client/help"/>
		<copy todir="temp/client/help">
			<fileset dir="src/gif/client/help"/>
			<fileset dir="src/jpg/client/help"/>
			<fileset dir="src/html/client/help"/>
			<fileset dir="src/jhelpset/client/help"/>
			<fileset dir="src/jhelptoc/client/help"/>
			<fileset dir="src/jhelpindex/client/help"/>
			<fileset dir="src/jhelpmap/client/help"/>
		</copy>
	</target>
	<target name="clientimages" depends="clientprep" description="Assemble client images dir sources into temp/client/images">
		<mkdir dir="temp/client/images"/>
		<copy todir="temp/client/images">
			<fileset dir="src/gif/client/images"/>
		</copy>
	</target>
	<target name="clientjarincludes" depends="clientprep" description="Assemble client includes temp/client">
		<copy todir="temp/client">
			<fileset dir="inc/client/jar"/>
		</copy>
		<copy todir="temp/client">
			<fileset dir="src/properties/client"/>
			<filterset>
				<filter token="version" value="${fedora.version}"/>
				<filter token="releaseDate" value="${fedora.releaseDate}"/>
			</filterset>
		</copy>
	</target>
	<!--
  <target name="docs"
          description="Build dev docs and user docs">
  </target>

  <target name="apidoc"
          description="Build the javadocs">
    <mkdir dir="apidoc"/>
    <javadoc packagenames="fedora.swing.mdi.*,fedora.swing.jhelp.*,fedora.client.*,fedora.common.*"
             sourcepath="${src.java.dir}"
             destdir="apidoc"
             author="true"
             version="true"
             use="true"/>
  </target>
-->
	<target name="definitions" depends="serverdocs" description="Generate the latest docs for each fedora-defined namespace.">
		<mkdir dir="dist/definitions/1/0/javadoc"/>
		<copy todir="dist/definitions/1/0/javadoc">
			<fileset dir="dist/userdocs/server/serverdocs"/>
		</copy>
	</target>
	<target name="serverdocs" depends="serverclasses" description="Generate user and developer docs in dist/server/serverdocs">
		<mkdir dir="dist/userdocs/server/serverdocs"/>
		<javadoc packagenames="fedora.server,fedora.server.types.gen,fedora.server.management,fedora.server.access,fedora.server.storage,fedora.server.storage.replication,fedora.server.storage.lowlevel,fedora.server.errors,fedora.server.behavior,fedora.server.test,fedora.server.storage.types,fedora.server.utilities,fedora.server.validation,fedora.server.access.dissemination,fedora.oai,fedora.oai.sample,fedora.logging,fedora.server.search,fedora.server.security,fedora.server.storage.service,fedora.localservices.saxon,fedora.common,fedora.common.rdf,fedora.server.config" sourcepath="${src.java.dir};temp/server/java;src/html/server/javadoc" classpath="${lib.xerces};${lib.cos};${lib.servlet};${lib.axis};${lib.commons-logging};${lib.jaxrpc};${lib.wsdl4j};${lib.junit};${lib.saxon};${lib.md5};${lib.jena};${lib.trippi};${lib.jrdf}" destdir="dist/userdocs/server/serverdocs" author="true" version="true" use="true" additionalparam="-breakiterator"/>
		<copy todir="${tomcat.deploy.dir}/userdocs/server/serverdocs">
			<fileset dir="dist/userdocs/server/serverdocs"/>
		</copy>
	</target>
	<target name="devdocs" depends="prep" description="Assemble development/system documentation into dist/devdocs">
		<mkdir dir="dist"/>
		<mkdir dir="dist/devdocs"/>
		<echo message="Copying docs that don't need translation"/>
		<copy todir="dist/devdocs">
			<fileset dir="src/txt/devdocs"/>
			<fileset dir="src/doc/devdocs"/>
			<fileset dir="src/sdr/devdocs"/>
			<fileset dir="src/pdf/devdocs"/>
			<fileset dir="src/gif/devdocs"/>
		</copy>
		<!--    <mkdir dir="dist/devdocs/devguide"/> -->
		<echo message="Translating devguide.dbx to html"/>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon};${lib.docbook-xsl-saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="dist/devdocs/devguide.html"/>
			<arg path="src/dbx/devdocs/devguide.dbx"/>
			<arg path="res/docbook-xsl/html/docbook.xsl"/>
			<!--     <arg value="saxon.extensions=true"/>
      		<arg value="chunk.section.depth=1"/> -->
		</exec>
		<echo message="Translating namespaces.dbx to html"/>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon};${lib.docbook-xsl-saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="dist/devdocs/namespaces.html"/>
			<arg path="src/dbx/devdocs/namespaces.dbx"/>
			<arg path="res/docbook-xsl/html/docbook.xsl"/>
		</exec>
	</target>
	<target name="userdocs" depends="prep" description="Assemble user documentation into dist/userdocs">
		<mkdir dir="${dist.dir}/userdocs"/>
		<echo message="Translating docs..."/>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon};${lib.docbook-xsl-saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="dist/userdocs/client/cmd-line/index.html"/>
			<arg path="src/dbx/userdocs/client-cmdline.dbx"/>
			<arg path="res/docbook-xsl/html/docbook.xsl"/>
		</exec>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon};${lib.docbook-xsl-saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="dist/userdocs/distribution/release-notes.html"/>
			<arg path="src/dbx/userdocs/release-notes.dbx"/>
			<arg path="res/docbook-xsl/html/docbook.xsl"/>
		</exec>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon};${lib.docbook-xsl-saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="dist/userdocs/distribution/demos.html"/>
			<arg path="src/dbx/userdocs/demos.dbx"/>
			<arg path="res/docbook-xsl/html/docbook.xsl"/>
		</exec>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon};${lib.docbook-xsl-saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="dist/userdocs/distribution/installation.html"/>
			<arg path="src/dbx/userdocs/installation.dbx"/>
			<arg path="res/docbook-xsl/html/docbook.xsl"/>
		</exec>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon};${lib.docbook-xsl-saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="dist/userdocs/distribution/migration.html"/>
			<arg path="src/dbx/userdocs/migration.dbx"/>
			<arg path="res/docbook-xsl/html/docbook.xsl"/>
		</exec>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon};${lib.docbook-xsl-saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="dist/userdocs/client/browser/apialite/index.html"/>
			<arg path="src/dbx/userdocs/apialite.dbx"/>
			<arg path="res/docbook-xsl/html/docbook.xsl"/>
		</exec>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon};${lib.docbook-xsl-saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="dist/userdocs/client/browser/apimlite/index.html"/>
			<arg path="src/dbx/userdocs/apimlite.dbx"/>
			<arg path="res/docbook-xsl/html/docbook.xsl"/>
		</exec>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon};${lib.docbook-xsl-saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="dist/userdocs/client/admin-gui/index.html"/>
			<arg path="src/dbx/userdocs/apimadmingui.dbx"/>
			<arg path="res/docbook-xsl/html/docbook.xsl"/>
		</exec>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon};${lib.docbook-xsl-saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="dist/userdocs/server/versioning.html"/>
			<arg path="src/dbx/userdocs/versioning.dbx"/>
			<arg path="res/docbook-xsl/html/docbook.xsl"/>
		</exec>
		<copy todir="dist/userdocs/client/admin-gui/images">
			<fileset dir="src/jpg/client/file"/>
		</copy>
		<copy todir="dist/userdocs/client/admin-gui/images">
			<fileset dir="src/jpg/client/tools"/>
		</copy>
		<copy todir="dist/userdocs/client/admin-gui/images">
			<fileset dir="src/jpg/client/help"/>
		</copy>
		<copy todir="dist/userdocs/client/admin-gui/images">
			<fileset dir="src/jpg/client/window"/>
		</copy>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon};${lib.docbook-xsl-saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="dist/userdocs/index.html"/>
			<arg path="src/dbx/userdocs/documentation.dbx"/>
			<arg path="res/docbook-xsl/html/docbook.xsl"/>
		</exec>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon};${lib.docbook-xsl-saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="dist/userdocs/client/browser/oai/index.html"/>
			<arg path="src/dbx/userdocs/oaiprovider.dbx"/>
			<arg path="res/docbook-xsl/html/docbook.xsl"/>
		</exec>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon};${lib.docbook-xsl-saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="dist/userdocs/client/browser/search/index.html"/>
			<arg path="src/dbx/userdocs/search.dbx"/>
			<arg path="res/docbook-xsl/html/docbook.xsl"/>
		</exec>
		<copy todir="dist/userdocs/client/browser/search/images">
			<fileset dir="src/jpg/search"/>
		</copy>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon};${lib.docbook-xsl-saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="dist/userdocs/server/index.html"/>
			<arg path="src/dbx/userdocs/server.dbx"/>
			<arg path="res/docbook-xsl/html/docbook.xsl"/>
		</exec>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon};${lib.docbook-xsl-saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="dist/userdocs/server/localservices/saxon/index.html"/>
			<arg path="src/dbx/userdocs/saxon.dbx"/>
			<arg path="res/docbook-xsl/html/docbook.xsl"/>
		</exec>
		<copy file="dist/userdocs/server/localservices/saxon/index.html" todir="${tomcat.deploy.dir}/saxon/"/>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon};${lib.docbook-xsl-saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="dist/userdocs/server/localservices/fop/index.html"/>
			<arg path="src/dbx/userdocs/fop.dbx"/>
			<arg path="res/docbook-xsl/html/docbook.xsl"/>
		</exec>
		<copy file="dist/userdocs/server/localservices/fop/index.html" todir="${tomcat.deploy.dir}/fop/"/>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon};${lib.docbook-xsl-saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="dist/userdocs/server/localservices/imagemanip/index.html"/>
			<arg path="src/dbx/userdocs/imagemanip.dbx"/>
			<arg path="res/docbook-xsl/html/docbook.xsl"/>
		</exec>
		<copy file="dist/userdocs/server/localservices/imagemanip/index.html" todir="${tomcat.deploy.dir}/imagemanip/"/>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon};${lib.docbook-xsl-saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="dist/userdocs/server/localservices/index.html"/>
			<arg path="src/dbx/userdocs/localservices.dbx"/>
			<arg path="res/docbook-xsl/html/docbook.xsl"/>
		</exec>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon};${lib.docbook-xsl-saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="dist/userdocs/client/servlet/soapclient/index.html"/>
			<arg path="src/dbx/userdocs/soap.dbx"/>
			<arg path="res/docbook-xsl/html/docbook.xsl"/>
		</exec>
		<copy file="dist/userdocs/client/servlet/soapclient/index.html" todir="${tomcat.deploy.dir}/soapclient/"/>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon};${lib.docbook-xsl-saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="dist/userdocs/distribution/diststruct.html"/>
			<arg path="src/dbx/userdocs/diststruct.dbx"/>
			<arg path="res/docbook-xsl/html/docbook.xsl"/>
		</exec>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon};${lib.docbook-xsl-saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="dist/userdocs/server/introduction.html"/>
			<arg path="src/dbx/userdocs/introduction.dbx"/>
			<arg path="res/docbook-xsl/html/docbook.xsl"/>
		</exec>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon};${lib.docbook-xsl-saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="dist/userdocs/server/features.html"/>
			<arg path="src/dbx/userdocs/features.dbx"/>
			<arg path="res/docbook-xsl/html/docbook.xsl"/>
		</exec>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon};${lib.docbook-xsl-saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="dist/userdocs/server/do-const.html"/>
			<arg path="src/dbx/userdocs/do-const.dbx"/>
			<arg path="res/docbook-xsl/html/docbook.xsl"/>
		</exec>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon};${lib.docbook-xsl-saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="dist/userdocs/server/webexp.html"/>
			<arg path="src/dbx/userdocs/webexp.dbx"/>
			<arg path="res/docbook-xsl/html/docbook.xsl"/>
		</exec>
		<echo message="Finished doc translations"/>
		<copy file="src/jpg/server/newlogo2.jpg" todir="dist/userdocs/images/"/>
		<copy file="src/jpg/server/newlogo2.jpg" todir="dist/userdocs/client/images/"/>
		<copy file="src/jpg/server/newlogo2.jpg" todir="dist/userdocs/client/cmd-line/images/"/>
		<copy file="src/jpg/server/newlogo2.jpg" todir="dist/userdocs/client/admin-gui/images/"/>
		<copy file="src/jpg/server/newlogo2.jpg" todir="dist/userdocs/client/browser/images/"/>
		<copy file="src/jpg/server/newlogo2.jpg" todir="dist/userdocs/client/browser/apialite/images/"/>
		<copy file="src/jpg/server/newlogo2.jpg" todir="dist/userdocs/client/browser/apimlite/images/"/>
		<copy file="src/jpg/server/newlogo2.jpg" todir="dist/userdocs/client/browser/oai/images/"/>
		<copy file="src/jpg/server/newlogo2.jpg" todir="dist/userdocs/client/browser/search/images/"/>
		<copy file="src/jpg/server/newlogo2.jpg" todir="dist/userdocs/client/servlet/images/"/>
		<copy file="src/jpg/server/newlogo2.jpg" todir="dist/userdocs/client/servlet/soapclient/images/"/>
		<copy file="src/jpg/server/newlogo2.jpg" todir="dist/userdocs/distribution/images/"/>
		<copy file="src/jpg/server/newlogo2.jpg" todir="dist/userdocs/server/images/"/>
		<copy file="src/jpg/server/version1.jpg" todir="dist/userdocs/server/images/"/>
		<copy file="src/jpg/server/version2.jpg" todir="dist/userdocs/server/images/"/>
		<copy file="src/jpg/server/newlogo2.jpg" todir="dist/userdocs/server/localservices/images/"/>
		<copy file="src/jpg/server/newlogo2.jpg" todir="dist/userdocs/server/localservices/fop/images/"/>
		<copy file="src/jpg/server/newlogo2.jpg" todir="dist/userdocs/server/localservices/imagemanip/images/"/>
		<copy file="src/jpg/server/newlogo2.jpg" todir="dist/userdocs/server/localservices/saxon/images/"/>
		<copy todir="${tomcat.deploy.dir}/userdocs">
			<fileset dir="dist/userdocs"/>
		</copy>
	</target>
	<target name="debug-wsdl" depends="prep" description="Produce html reports on the validity of the API-A, API-A-LITE, API-M, and API-M-LITE wsdl in temp/debug/">
		<mkdir dir="temp/debug"/>
		<echo message="Producing html reports on the validity of API-A, API-A-LITE and API-M..."/>
		<echo message="Doing API-A..."/>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="temp/debug/Fedora-API-A.html"/>
			<arg path="src/wsdl/Fedora-API-A.wsdl"/>
			<arg path="res/wsdl-validator/validate.xsl"/>
		</exec>
		<echo message="Doing API-A-LITE..."/>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="temp/debug/Fedora-API-A-LITE.html"/>
			<arg path="src/wsdl/Fedora-API-A-LITE.wsdl"/>
			<arg path="res/wsdl-validator/validate.xsl"/>
		</exec>
		<echo message="Doing API-M..."/>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="temp/debug/Fedora-API-M.html"/>
			<arg path="src/wsdl/Fedora-API-M.wsdl"/>
			<arg path="res/wsdl-validator/validate.xsl"/>
		</exec>
		<echo message="Doing API-M-LITE..."/>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="temp/debug/Fedora-API-M-LITE.html"/>
			<arg path="src/wsdl/Fedora-API-M-LITE.wsdl"/>
			<arg path="res/wsdl-validator/validate.xsl"/>
		</exec>
	</target>
	<target name="document-wsdl" depends="prep" description="Produce html documentation of the API-A, API-A-LITE, API-M, and API-M-LITE wsdl in dist/wsdldoc/">
		<mkdir dir="dist"/>
		<mkdir dir="dist/wsdldoc"/>
		<echo message="Producing html reports on the validity of API-A, API-A-LITE, API-M, and API-M-LITE..."/>
		<echo message="Doing API-A..."/>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="dist/wsdldoc/Fedora-API-A.html"/>
			<arg path="src/wsdl/Fedora-API-A.wsdl"/>
			<arg path="res/wsdl-documentor/document.xsl"/>
		</exec>
		<echo message="Doing API-A-LITE..."/>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="dist/wsdldoc/Fedora-API-A-LITE.html"/>
			<arg path="src/wsdl/Fedora-API-A-LITE.wsdl"/>
			<arg path="res/wsdl-documentor/document.xsl"/>
		</exec>
		<echo message="Doing API-M..."/>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="dist/wsdldoc/Fedora-API-M.html"/>
			<arg path="src/wsdl/Fedora-API-M.wsdl"/>
			<arg path="res/wsdl-documentor/document.xsl"/>
		</exec>
		<echo message="Doing API-M-LITE..."/>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saxon}"/>
			<arg value="com.icl.saxon.StyleSheet"/>
			<arg value="-o"/>
			<arg path="dist/wsdldoc/Fedora-API-M-LITE.html"/>
			<arg path="src/wsdl/Fedora-API-M-LITE.wsdl"/>
			<arg path="res/wsdl-documentor/document.xsl"/>
		</exec>
	</target>
	<target name="wsdl2java" depends="prep" description="Generate java classes for API-M and API-A in temp/server/java">
		<echo message="Generating java classes for API-M and API-A in temp/server/java"/>
		<mkdir dir="temp/wsdl2java"/>
		<copy file="inc/server/xsd/wsdl.xsd" todir="temp/wsdl2java"/>
		<copy file="inc/server/xsd/soapenc.xsd" todir="temp/wsdl2java"/>
		<copy file="src/xsd/fedora-types.xsd" todir="temp/wsdl2java"/>
		<copy file="src/xsd/fedora-behavior-bind.xsd" todir="temp/wsdl2java"/>
		<echo message="API-M..."/>
		<copy file="src/xsd/fedora-auditing.xsd" todir="temp/wsdl2java"/>
		<copy file="src/wsdl/Fedora-API-M.wsdl" todir="temp/wsdl2java"/>
		<mkdir dir="temp/server/java"/>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.axis};${lib.commons-logging};${lib.jaxrpc};${lib.wsdl4j};${lib.saaj};${lib.commons-discovery}"/>
			<arg value="org.apache.axis.wsdl.WSDL2Java"/>
			<arg value="-s"/>
			<arg value="--skeletonDeploy"/>
			<arg value="true"/>
			<arg value="--NStoPkg"/>
			<arg value="http://www.fedora.info/definitions/1/0/api/=fedora.server.management"/>
			<arg value="--NStoPkg"/>
			<arg value="http://www.fedora.info/definitions/1/0/types/=fedora.server.types.gen"/>
			<arg value="--NStoPkg"/>
			<arg value="http://www.fedora.info/definitions/1/0/auditing/=fedora.server.types.gen"/>
			<arg value="--NStoPkg"/>
			<arg value="http://www.fedora.info/definitions/1/0/binding/=fedora.server.types.gen"/>
			<arg value="-o"/>
			<arg value="temp/server/java"/>
			<arg path="temp/wsdl2java/Fedora-API-M.wsdl"/>
		</exec>
		<echo message="API-A..."/>
		<copy file="src/wsdl/Fedora-API-A.wsdl" todir="temp/wsdl2java"/>
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.axis};${lib.commons-logging};${lib.jaxrpc};${lib.wsdl4j};${lib.saaj};${lib.commons-discovery}"/>
			<arg value="org.apache.axis.wsdl.WSDL2Java"/>
			<arg value="-s"/>
			<arg value="--skeletonDeploy"/>
			<arg value="true"/>
			<arg value="--NStoPkg"/>
			<arg value="http://www.fedora.info/definitions/1/0/api/=fedora.server.access"/>
			<arg value="--NStoPkg"/>
			<arg value="http://www.fedora.info/definitions/1/0/types/=fedora.server.types.gen"/>
			<arg value="-o"/>
			<arg value="temp/server/java"/>
			<arg path="temp/wsdl2java/Fedora-API-A.wsdl"/>
		</exec>
	</target>
	<target name="testdeploy" depends="testdeployM,testdeployA"/>
	<target name="testclient">
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.saaj};${lib.commons-discovery};${lib.axis};${lib.commons-logging};${lib.jaxrpc};${lib.wsdl4j};${lib.tt-bytecode};${tomcat.deploy.dir}/fedora/WEB-INF/classes"/>
			<arg value="fedora.server.test.TestClient"/>
		</exec>
	</target>
	<target name="testdeployA">
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.axis};${lib.commons-logging};${lib.jaxrpc};${lib.wsdl4j};${lib.tt-bytecode};${lib.saaj};${lib.commons-discovery};${tomcat.deploy.dir}/fedora/WEB-INF/classes"/>
			<arg value="org.apache.axis.client.AdminClient"/>
			<arg value="-lhttp://localhost:8080/fedora/AdminService"/>
			<arg value="dist/server/config/deployAPI-A.wsdd"/>
		</exec>
	</target>
	<target name="testdeployM">
		<exec executable="java">
			<arg value="-classpath"/>
			<arg path="${lib.axis};${lib.commons-logging};${lib.jaxrpc};${lib.wsdl4j};${lib.tt-bytecode};${lib.saaj};${lib.commons-discovery};${tomcat.deploy.dir}/fedora/WEB-INF/classes"/>
			<arg value="org.apache.axis.client.AdminClient"/>
			<arg value="-lhttp://localhost:8080/fedora/AdminService"/>
			<arg value="dist/server/config/deploy.wsdd"/>
		</exec>
	</target>
	<target name="serverunixstuff" if="buildingOnUnix" depends="servermostly">
		<!-- add symlinks for shell scripts in unix -->
		<exec dir="./dist/server/bin" executable="/bin/ln">
			<arg line="-s mckoi-init.sh mckoi-init"/>
		</exec>
		<exec dir="./dist/server/bin" executable="/bin/ln">
			<arg line="-s mckoi-admin.sh mckoi-admin"/>
		</exec>
		<exec dir="./dist/server/bin" executable="/bin/ln">
			<arg line="-s mckoi-start.sh mckoi-start"/>
		</exec>
		<exec dir="./dist/server/bin" executable="/bin/ln">
			<arg line="-s mckoi-stop.sh mckoi-stop"/>
		</exec>
		<exec dir="./dist/server/bin" executable="/bin/ln">
			<arg line="-s mysql-config.sh mysql-config"/>
		</exec>
		<exec dir="./dist/server/bin" executable="/bin/ln">
			<arg line="-s mysql-drop-db.sh mysql-drop-db"/>
		</exec>
		<exec dir="./dist/server/bin" executable="/bin/ln">
			<arg line="-s fedora-config.sh fedora-config"/>
		</exec>
		<exec dir="./dist/server/bin" executable="/bin/ln">
			<arg line="-s fedora-start.sh fedora-start"/>
		</exec>
		<exec dir="./dist/server/bin" executable="/bin/ln">
			<arg line="-s fedora-stop.sh fedora-stop"/>
		</exec>
		<!-- add execute permission to script files in distribution tree; this is only run in unix environments -->
		<chmod dir="dist/server/bin" perm="ugo+x" includes="**/*"/>
	</target>
	<target name="server" depends="serverunixstuff,servermostly">
	</target>
	<target name="servermostly" depends="serverclasses" description="Server distribution">
		<condition property="buildingOnUnix">
			<os family="unix"/>
		</condition>
		<mkdir dir="${server.dist.dir}"/>
		<copy toDir="${server.dist.dir}">
			<fileset dir="inc/server">
				<exclude name="**/exist09/**"/>
			</fileset>
		</copy>
		<copy todir="dist/server/xsd">
			<fileset dir="src/xsd"/>
		</copy>
		<!-- Schematron:  Fedora rules schema and schematron preprocessor -->
		<mkdir dir="dist/server/schematron"/>
		<copy file="src/xml/schematron/metsExtRules1-0.xml" todir="dist/server/schematron"/>
		<copy file="src/xml/schematron/foxmlRules1-0.xml" todir="dist/server/schematron"/>
		<copy file="src/xsl/schematron/preprocessor.xslt" todir="dist/server/schematron"/>
		<mkdir dir="dist/server/config"/>
		<copy file="temp/server/java/fedora/server/management/deploy.wsdd" todir="dist/server/config"/>
		<copy file="temp/server/java/fedora/server/access/deploy.wsdd" tofile="dist/server/config/deployAPI-A.wsdd"/>
		<copy file="temp/server/java/fedora/server/management/undeploy.wsdd" todir="dist/server/config"/>
		<copy file="temp/server/java/fedora/server/access/undeploy.wsdd" tofile="dist/server/config/undeployAPI-A.wsdd"/>
		<replace file="dist/server/config/deploy.wsdd" token="Fedora-API-M-Port-SOAPHTTP" value="management/soap"/>
		<replace file="dist/server/config/deployAPI-A.wsdd" token="Fedora-API-A-Port-SOAPHTTP" value="access/soap"/>
		<replace file="dist/server/config/deploy.wsdd" token="*&quot;/&gt;" value="*&quot;/&gt;&lt;parameter name=&quot;scope&quot; value=&quot;application&quot;/&gt;"/>
		<replace file="dist/server/config/deployAPI-A.wsdd" token="*&quot;/&gt;" value="*&quot;/&gt;&lt;parameter name=&quot;scope&quot; value=&quot;application&quot;/&gt;"/>
		<replace file="dist/server/config/undeploy.wsdd" token="Fedora-API-M-Port-SOAPHTTP" value="management/soap"/>
		<replace file="dist/server/config/undeployAPI-A.wsdd" token="Fedora-API-A-Port-SOAPHTTP" value="access/soap"/>
		<copy file="src/web-app/fedora/server/web.xml" todir="${tomcat.deploy.dir}/fedora/WEB-INF"/>
		<copy todir="${tomcat.deploy.dir}/fedora/WEB-INF/classes">
			<fileset dir="temp/server/classes"/>
		</copy>
		<copy todir="${tomcat.deploy.dir}/ROOT">
			<fileset dir="src/xsd"/>
		</copy>
		<!-- stylesheets for the resource index query interface at fedora/risearch -->
		<mkdir dir="${tomcat.deploy.dir}/ROOT/ri"/>
		<copy todir="${tomcat.deploy.dir}/ROOT/ri">
			<fileset dir="src/xsl/ri"/>
		</copy>
		<!-- setup for demo object datastream content (put in localhost staging area) -->
		<mkdir dir="${tomcat.deploy.dir}/ROOT/demo"/>
		<copy todir="${tomcat.deploy.dir}/ROOT/demo">
			<fileset dir="src/demo-content"/>
		</copy>
		<!-- end setup for demo objects -->
		<copy file="src/jpg/server/newlogo2.jpg" todir="${tomcat.deploy.dir}/ROOT/images/"/>
		<mkdir dir="${tomcat.deploy.dir}/fedora/WEB-INF/classes/fedora/server/resources"/>
		<copy todir="${tomcat.deploy.dir}/fedora/WEB-INF/classes">
			<fileset dir="src/properties/server"/>
			<fileset dir="src/dbspec/server"/>
		</copy>
		<copy todir="dist/server/config">
			<fileset dir="src/fcfg/server">
				<include name="**/*.fcfg"/>
			</fileset>
		</copy>
		<mkdir dir="dist/server/bin"/>
		<copy todir="dist/server/bin">
			<fileset dir="src/bat/server"/>
			<fileset dir="src/sh/server"/>
			<filterset>
				<filter token="mckoi.basename" value="${mckoi.basename}"/>
				<filter token="tomcat.basename" value="${tomcat.basename}"/>
				<filter token="AxisUtility.unix.libs" value="${AxisUtility.unix.libs}"/>
				<filter token="AxisUtility.windows.libs" value="${AxisUtility.windows.libs}"/>
				<filter token="ServerController.unix.libs" value="${ServerController.unix.libs}"/>
				<filter token="ServerController.windows.libs" value="${ServerController.windows.libs}"/>
			</filterset>
		</copy>
		<copy file="${lib.junit}" todir="${tomcat.deploy.dir}/fedora/WEB-INF/lib"/>
		<!-- testing new tomcat -->
		<copy file="${lib.xerces}" todir="${tomcat.dir}/common/lib"/>
		<copy file="${lib.xml-apis}" todir="${tomcat.dir}/common/lib"/>
		<copy file="${lib.axis}" todir="${tomcat.dir}/common/lib"/>
		<copy file="${lib.jaxrpc}" todir="${tomcat.dir}/common/lib"/>
		<copy file="${lib.saaj}" todir="${tomcat.dir}/common/lib"/>
		<copy file="${lib.commons-discovery}" todir="${tomcat.dir}/common/lib"/>
		<copy file="${lib.commons-logging}" todir="${tomcat.dir}/common/lib"/>
		<copy file="${lib.wsdl4j}" todir="${tomcat.dir}/common/lib"/>
		<copy file="${lib.tt-bytecode}" todir="${tomcat.dir}/common/lib"/>
		<copy file="${lib.mckoi-jdbc}" todir="${tomcat.dir}/common/lib"/>
		<copy file="${lib.mysql-connector}" todir="${tomcat.dir}/common/lib"/>
		<copy file="${lib.avalon-framework}" todir="${tomcat.deploy.dir}/fedora/WEB-INF/lib"/>
		<copy file="${lib.batik}" todir="${tomcat.deploy.dir}/fedora/WEB-INF/lib"/>
		<copy file="${lib.cos}" todir="${tomcat.deploy.dir}/fedora/WEB-INF/lib"/>
		<copy file="${lib.fop}" todir="${tomcat.deploy.dir}/fedora/WEB-INF/lib"/>
		<copy file="${lib.ij}" todir="${tomcat.deploy.dir}/fedora/WEB-INF/lib"/>
		<copy file="${lib.jai_codec}" todir="${tomcat.deploy.dir}/fedora/WEB-INF/lib"/>
		<copy file="${lib.jai_core}" todir="${tomcat.deploy.dir}/fedora/WEB-INF/lib"/>
		<copy file="${lib.md5}" todir="${tomcat.deploy.dir}/fedora/WEB-INF/lib"/>
		<copy file="${lib.saxon}" todir="${tomcat.deploy.dir}/fedora/WEB-INF/lib"/>
		<!-- Saxon for use with Schematron validation -->
		<copy file="${lib.saxon}" todir="${tomcat.deploy.dir}/fedora/WEB-INF/lib"/>
		<copy todir="${tomcat.deploy.dir}/fedora/WEB-INF/lib">
			<fileset refid="server-libs.fileset"/>
		</copy>
		<mkdir dir="dist/server/access"/>
		<!-- Stylesheets used by the Default Disseminator-->
		<copy file="src/xsl/access/viewObjectMethods.xslt" todir="dist/server/access"/>
		<copy file="src/xsl/access/viewObjectProfile.xslt" todir="dist/server/access"/>
		<copy file="src/xsl/access/viewItemIndex.xslt" todir="dist/server/access"/>
		<copy file="src/xsl/access/viewDublinCore.xslt" todir="dist/server/access"/>
		<!--Repository Info xsl stylesheet used by API-A-LITE  -->
		<copy file="src/xsl/access/viewRepositoryInfo.xslt" todir="dist/server/access"/>
		<!--Object History xsl stylesheet used by API-A-LITE  -->
		<copy file="src/xsl/access/viewObjectHistory.xslt" todir="dist/server/access"/>
		<!--Report xsl stylesheet to format html form for report request  -->
		<copy file="src/xsl/access/reportRequestHtml.xslt" todir="dist/server/access"/>
		<!--Report xsl stylesheet to format report as html  -->
		<copy file="src/xsl/access/reportHtml.xslt" todir="dist/server/access"/>
		<!--Report xsl stylesheet to copy xml intact  -->
		<copy file="src/xsl/access/reportXml.xslt" todir="dist/server/access"/>
		<!--Datastream and Method xsl stylesheets used by API-A-LITE-->
		<copy file="src/xsl/access/listDatastreams.xslt" todir="dist/server/access"/>
		<copy file="src/xsl/access/listMethods.xslt" todir="dist/server/access"/>
		<echo message="Finished building server distribution in dist/server"/>
		<mkdir dir="dist/server/management"/>
		<!-- ObjectMethods xsl stylesheet used by API-A-LITE and Default Disseminator (DefaultBehaviorImpl) -->
		<copy file="src/xsl/management/getNextPIDInfo.xslt" todir="dist/server/management"/>
	</target>
	<target name="localservices" depends="server, localservicesclasses">
		<!-- saxon service -->
		<copy todir="${tomcat.deploy.dir}/saxon/WEB-INF/classes/fedora/localservices/saxon">
			<fileset dir="temp/localservices/classes/fedora/localservices/saxon"/>
		</copy>
		<copy file="src/web-app/fedora/localservices/saxon/web.xml" todir="${tomcat.deploy.dir}/saxon/WEB-INF"/>
		<copy file="${lib.saxon}" todir="${tomcat.deploy.dir}/saxon/WEB-INF/lib"/>
		<!-- fop service -->
		<copy todir="${tomcat.deploy.dir}/fop/WEB-INF/classes/fedora/localservices/fop">
			<fileset dir="temp/localservices/classes/fedora/localservices/fop"/>
		</copy>
		<copy file="src/web-app/fedora/localservices/fop/web.xml" todir="${tomcat.deploy.dir}/fop/WEB-INF"/>
		<copy file="${lib.avalon-framework}" todir="${tomcat.deploy.dir}/fop/WEB-INF/lib"/>
		<copy file="${lib.batik}" todir="${tomcat.deploy.dir}/fop/WEB-INF/lib"/>
		<copy file="${lib.fop}" todir="${tomcat.deploy.dir}/fop/WEB-INF/lib"/>
		<!-- imagemanip service -->
		<copy todir="${tomcat.deploy.dir}/imagemanip/WEB-INF/classes/fedora/localservices/imagemanip">
			<fileset dir="temp/localservices/classes/fedora/localservices/imagemanip"/>
		</copy>
		<copy file="src/web-app/fedora/localservices/imagemanip/web.xml" todir="${tomcat.deploy.dir}/imagemanip/WEB-INF"/>
		<copy file="src/web-app/fedora/localservices/imagemanip/index.html" todir="${tomcat.deploy.dir}/imagemanip"/>
		<copy file="${lib.ij}" todir="${tomcat.deploy.dir}/imagemanip/WEB-INF/lib"/>
		<copy file="${lib.commons-httpclient}" todir="${tomcat.deploy.dir}/imagemanip/WEB-INF/lib"/>
		<!-- the next two need to go in common cuz sealed -->
		<copy file="${lib.jai_core}" todir="${tomcat.dir}/common/lib"/>
		<copy file="${lib.jai_codec}" todir="${tomcat.dir}/common/lib"/>
		<!-- soap client -->
		<copy todir="${tomcat.deploy.dir}/soapclient/WEB-INF/classes">
			<fileset dir="temp/soapclient/classes"/>
		</copy>
		<copy file="src/web-app/fedora/soapclient/web.xml" todir="${tomcat.deploy.dir}/soapclient/WEB-INF"/>
		<copy file="${lib.saxon}" todir="${tomcat.deploy.dir}/soapclient/WEB-INF/lib"/>
		<copy file="temp/soapclient/lib/fedoragentypes.jar" todir="${tomcat.deploy.dir}/soapclient/WEB-INF/lib"/>
		<copy file="temp/soapclient/lib/fedorautilities.jar" todir="${tomcat.deploy.dir}/soapclient/WEB-INF/lib"/>
		<copy file="src/xsl/soapclient/objectMethods.xslt" todir="${tomcat.deploy.dir}/soapclient/WEB-INF/xsl"/>
		<copy file="src/xsl/soapclient/listDatastreams.xslt" todir="${tomcat.deploy.dir}/soapclient/WEB-INF/xsl"/>
		<copy file="src/xsl/soapclient/listMethods.xslt" todir="${tomcat.deploy.dir}/soapclient/WEB-INF/xsl"/>
		<copy file="src/xsl/soapclient/viewObjectProfile.xslt" todir="${tomcat.deploy.dir}/soapclient/WEB-INF/xsl"/>
		<copy file="src/xsl/soapclient/viewRepositoryInfo.xslt" todir="${tomcat.deploy.dir}/soapclient/WEB-INF/xsl"/>
		<copy file="src/xsl/soapclient/viewObjectHistory.xslt" todir="${tomcat.deploy.dir}/soapclient/WEB-INF/xsl"/>
		<copy file="src/xsl/soapclient/behaviorDefs.xslt" todir="${tomcat.deploy.dir}/soapclient/WEB-INF/xsl"/>
		<copy file="src/properties/soapclient/soapclient.properties" todir="${tomcat.deploy.dir}/soapclient/WEB-INF"/>
		<copy file="src/web-app/userdocs/WEB-INF/web.xml" todir="${tomcat.deploy.dir}/userdocs/WEB-INF"/>
		<copy file="src/jpg/server/newlogo2.jpg" todir="${tomcat.deploy.dir}/soapclient/images/"/>
		<copy file="src/jpg/server/newlogo2.jpg" todir="${tomcat.deploy.dir}/saxon/images/"/>
		<copy file="src/jpg/server/newlogo2.jpg" todir="${tomcat.deploy.dir}/imagemanip/images/"/>
		<copy file="src/jpg/server/newlogo2.jpg" todir="${tomcat.deploy.dir}/fop/images/"/>
	</target>
	<target name="servertest" description="run a test on the server">
		<exec executable="java">
			<arg value="-Dfedora.home=dist/server"/>
			<arg value="-Djavax.xml.parsers.DocumentBuilderFactory=org.apache.xerces.jaxp.DocumentBuilderFactoryImpl"/>
			<arg value="-classpath"/>
			<arg path="${lib.xerces};${tomcat.deploy.dir}/fedora/WEB-INF/classes;${lib.mysql-connector};${tomcat.dir}/common/lib/mkjdbc.jar;${lib.saxon}"/>
			<arg value="fedora.server.Server"/>
			<arg value="test"/>
		</exec>
	</target>
	<target name="fieldsearchtest" description="run fedora.server.search.FieldSearchExistImpl.">
		<exec executable="java">
			<arg value="-Dfedora.home=dist/server"/>
			<arg value="-Djavax.xml.parsers.DocumentBuilderFactory=org.apache.xerces.jaxp.DocumentBuilderFactoryImpl"/>
			<arg value="-Djavax.xml.parsers.SAXParserFactory=org.apache.xerces.jaxp.SAXParserFactoryImpl"/>
			<arg value="-Djavax.xml.transform.TransformerFactory=com.icl.saxon.TransformerFactoryImpl"/>
			<arg value="-classpath"/>
			<arg path="${lib.log4j};${lib.xerces};${tomcat.deploy.dir}/fedora/WEB-INF/classes;${tomcat.deploy.dir}/fedora/WEB-INF/lib/saxon6.5.jar"/>
			<arg value="fedora.server.search.FieldSearchExistImpl"/>
			<arg path="dist/server/exist09"/>
		</exec>
	</target>
	<target name="serverclasses" depends="serverprep,wsdl2java" description="Compile server java code into temp/server/classes">
		<delete file="temp/server/java/fedora/server/management/FedoraAPIMBindingSOAPHTTPImpl.java"/>
		<delete file="temp/server/java/fedora/server/management/FedoraAPIMServiceLocator.java"/>
		<delete file="temp/server/java/fedora/server/access/FedoraAPIABindingSOAPHTTPImpl.java"/>
		<mkdir dir="temp/server/classes"/>
		<javac srcdir="${src.java.dir}:temp/server/java" destdir="temp/server/classes" classpathref="serverclasses-lib.path" includes="fedora/server/**,fedora/logging/**,fedora/oai/**,fedora/common/**" optimize="${build.optimize}" debug="${build.debug}"/>
	</target>
	<target name="serverprep" depends="prep" description="Prepare a temporary build area for server-related targets">
		<mkdir dir="temp/server"/>
	</target>
	<target name="localservicesclasses" depends="localservicesprep" description="Generate java classes for local services">
		<mkdir dir="temp/localservices/classes"/>
		<mkdir dir="temp/soapclient/classes"/>
		<mkdir dir="temp/soapclient/lib"/>
		<javac srcdir="temp/localservices/java" destdir="temp/localservices/classes" classpathref="localservices-lib.path" optimize="${build.optimize}" debug="${build.debug}"/>
		<exec executable="jar">
			<arg value="-cf"/>
			<arg path="temp/soapclient/lib/fedorautilities.jar"/>
			<arg value="-C"/>
			<arg value="temp/server/classes"/>
			<arg value="fedora/server/utilities/"/>
		</exec>
		<exec executable="jar">
			<arg value="-cf"/>
			<arg path="temp/soapclient/lib/fedoragentypes.jar"/>
			<arg value="-C"/>
			<arg value="temp/server/classes"/>
			<arg value="fedora/server/types/gen/"/>
		</exec>
		<javac srcdir="temp/soapclient/java" destdir="temp/soapclient/classes" classpath="${lib.servlet};${lib.axis};${lib.commons-logging};${lib.jaxrpc};${lib.wsdl4j};lib/server/exist.jar;lib/server/jakarta-oro-2.0.6.jar;lib/server/antlr.jar;lib/server/excalibur-cli-1.0.jar;lib/server/resolver-20020130.jar;lib/server/trove.jar;lib/server/xalan-2.3.1.jar;lib/server/xmldb.jar;lib/server/xmlrpc-1.1.jar;${lib.saxon};${lib.junit};${lib.md5};temp/soapclient/lib/fedoragentypes.jar;temp/soapclient/lib/fedorautilities.jar" includes="**" optimize="${build.optimize}" debug="${build.debug}"/>
	</target>
	<target name="localservicesprep" depends="prep" description="Prepare a temporary build area for localservices-related targets">
		<mkdir dir="temp/localservices"/>
		<copy todir="temp/localservices/java/fedora/localservices">
			<fileset dir="src/java/fedora/localservices"/>
		</copy>
		<mkdir dir="temp/soapclient"/>
		<copy todir="temp/soapclient/java/fedora/soapclient">
			<fileset dir="src/java/fedora/soapclient"/>
		</copy>
	</target>
	<!-- Builds all autogenerated code (e.g. for use in Eclipse, add the generatedCode directory as a source folder) -->
	<target name="generatedCode" depends="stubwrappers" description="Builds all autogenerated code (e.g. WSDL)">
		<mkdir dir="temp/generatedCode"/>
		<copy todir="temp/generatedCode">
			<fileset dir="temp/clientgen">
				<include name="**/*.java"/>
			</fileset>
			<fileset dir="temp/server/java">
				<include name="**/*.java"/>
				<exclude name="**/APIAStubWrapper.java"/>
				<exclude name="**/APIMStubWrapper.java"/>
				<exclude name="**/FedoraAPIABindingSOAPHTTPImpl.java"/>
				<exclude name="**/FedoraAPIMBindingSOAPHTTPImpl.java"/>
				<exclude name="**/FedoraAPIMServiceLocator.java"/>
			</fileset>
			<fileset dir="src/properties/server"/>
		</copy>
	</target>
	<target name="clean" description="Clean up all targets and temp files">
		<delete dir="temp"/>
		<delete dir="${dist.dir}"/>
	</target>
</project>
