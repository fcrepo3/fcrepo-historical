<?xml version="1.0" encoding="UTF-8"?>
<!--  $Id$ -->
<project name="Fedora" default="dist" basedir=".">
    <description>The Fedora Project</description>
    
    <!-- set global properties for this build -->
    <property environment="env"/>
    <property name="javac.debug"               value="on"/>
    <property name="javac.deprecation"         value="on"/>
    <property name="javac.optimize"            value="off"/>
    <property name="javac.source"              value="1.5"/>
    <property name="javac.target"              value="1.5"/>
    
    <property name="build.dir"                 location="build"/>
    <property name="client.build.dir"          location="${build.dir}/client"/>
	<property name="docs.build.dir"            location="${build.dir}/docs"/>
	<property name="fedora.home.build.dir"     location="${build.dir}/home"/>
	<property name="install.build.dir"		   location="${build.dir}/install"/>
	<property name="junit.build.dir"		   location="${build.dir}/junit"/>
    <property name="localservices.build.dir"   location="${build.dir}/localservices"/>
    <property name="server.build.dir"          location="${build.dir}/server"/>
    <property name="stubwrappers.build.dir"    location="${build.dir}/stubwrappers"/>
    <property name="util.build.dir"            location="${build.dir}/util"/>
    <property name="war.build.dir"             location="${build.dir}/war"/>
    <property name="fedora.war.build.dir"      location="${war.build.dir}/fedora"/>
	<property name="demo.war.build.dir"        location="${war.build.dir}/demo"/>
    <property name="wsdl.build.dir"            location="${build.dir}/wsdl"/>

    <property name="dist.dir"                  location="dist"/>
    <property name="lib.dir"                   location="lib"/>
    
    <property name="src.dir"                   location="src"/>
	<property name="docs.src.dir"              location="${src.dir}/doc"/>
    <property name="java.src.dir"              location="${src.dir}/java"/>
	<property name="junit.src.dir"             location="${src.dir}/test/junit"/>
    <property name="properties.src.dir"        location="${src.dir}/properties"/>
    <property name="war.src.dir"               location="${src.dir}/war"/>
    <property name="war-fedora.src.dir"        location="${war.src.dir}/fedora"/>
    <property name="wsdl.src.dir"              location="${src.dir}/wsdl"/>
    <property name="xacml.src.dir"             location="${src.dir}/xacml-policies"/>
    <property name="xsd.src.dir"               location="${src.dir}/xsd"/>
    <property name="xsl.src.dir"               location="${src.dir}/xsl"/>
    
    <!-- load external properties files -->
    <loadproperties srcFile="${properties.src.dir}/lib.properties"/>
    <loadproperties srcFile="${properties.src.dir}/server/fedora/server/resources/Server.properties">
        <filterchain>
            <linecontains>
                <contains value="version."/>
            </linecontains>
        </filterchain>
    </loadproperties>
    <!-- get the version of Fedora -->
    <property name="fedora.version" value="${version.major}.${version.minor}"/>
    <property name="fedora.releaseDate" value="${version.releaseDate}"/>
    
    <!-- classpaths -->
    <path id="axis.classpath">
        <pathelement location="${lib.activation}"/>
        <pathelement location="${lib.axis}"/>
        <pathelement location="${lib.axis-ant}"/>
        <pathelement location="${lib.commons-discovery}"/>
        <pathelement location="${lib.commons-logging}"/>
        <pathelement location="${lib.javamail}"/>
        <pathelement location="${lib.jaxrpc}"/>
        <pathelement location="${lib.saaj}"/>
        <pathelement location="${lib.wsdl4j}"/>
    </path>
    
    <path id="compile.classpath">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar"/>
        </fileset>                    
    </path>
	
	<path id="junit.classpath">
		<path refid="compile.classpath"/>
		<pathelement path="src/properties/server"/>
		<pathelement path="${junit.build.dir}"/>
		<pathelement path="${client.build.dir}/classes"/>
		<pathelement path="${server.build.dir}/classes"/>
		<pathelement path="${util.build.dir}"/>
	</path>
    
    <pathconvert pathsep="," property="server-libs.list">
        <path id="server-libs.path">
            <pathelement location="${lib.activation}"/>
            <pathelement location="${lib.avalon-framework}"/>
            <pathelement location="${lib.batik}"/>
            <pathelement location="${lib.castor}"/>
            <pathelement location="${lib.cos}"/>
            <pathelement location="${lib.dateutils}"/>
        	<pathelement location="${lib.dom4j}"/>
            <pathelement location="${lib.fop}"/>
            <pathelement location="${lib.ij}"/>
            <pathelement location="${lib.jai_codec}"/>
            <pathelement location="${lib.jai_core}"/>
        	<pathelement location="${lib.jaxen}"/>
            <pathelement location="${lib.jena}"/>
            <pathelement location="${lib.jtidy}"/>
            <pathelement location="${lib.kowari-driver}"/>
            <pathelement location="${lib.log4j}"/>
            <pathelement location="${lib.lucene}"/>
            <pathelement location="${lib.mptstore}"/>
            <pathelement location="${lib.md5}"/>
            <pathelement location="${lib.openrdf-util}"/>
            <pathelement location="${lib.openrdf-model}"/>
            <pathelement location="${lib.oro}"/>
            <pathelement location="${lib.rio}"/>
            <pathelement location="${lib.sunxacml}"/>
            <pathelement location="${lib.trippi-core}"/>
            <pathelement location="${lib.trippi-kowari}"/>
            <pathelement location="${lib.trippi-mptstore}"/>
            <pathelement location="${lib.trove}"/>
            <pathelement location="${lib.xmlpull}"/>
            <pathelement location="${lib.xpp3}"/>
            
        	<pathelement location="${lib.commons-beanutils}"/>
        	<pathelement location="${lib.commons-betwixt}"/>
        	<pathelement location="${lib.commons-codec}"/>
            <pathelement location="${lib.commons-httpclient}"/>
            <pathelement location="${lib.saxon}"/>

            <pathelement location="${lib.staxapi}"/>
            <pathelement location="${lib.sjsxp}"/>
            <pathelement location="${lib.staxutil}"/>
        	
        	<pathelement location="${lib.jsf-api}"/>
        	<pathelement location="${lib.jsf-impl}"/>
        	<pathelement location="${lib.jstl}"/>
        	<pathelement location="${lib.jstl-standard}"/>
            
            <!-- prev in common/lib -->
            <pathelement location="${lib.axis}"/>
            <pathelement location="${lib.commons-discovery}"/>
            <pathelement location="${lib.commons-logging}"/>
            <pathelement location="${lib.javamail}"/>
            <pathelement location="${lib.jaxrpc}"/>
            <pathelement location="${lib.jrdf}"/>
            <pathelement location="${lib.saaj}"/>
            <pathelement location="${lib.tt-bytecode}"/>
            <pathelement location="${lib.wsdl4j}"/>
        </path>
        <map from="${lib.dir}${file.separator}" to=""/>
    </pathconvert>
    <fileset dir="${lib.dir}" id="server-libs.fileset" includes="${server-libs.list}"/>
    
    <pathconvert pathsep="," property="client-libs.list">
        <path id="client-libs.path">
            <pathelement location="${lib.activation}"/>
            <pathelement location="${lib.axis}"/>
            <pathelement location="${lib.batik}"/>
            <pathelement location="${lib.commons-codec}"/>
            <pathelement location="${lib.commons-dbcp}"/>
            <pathelement location="${lib.commons-discovery}"/>
            <pathelement location="${lib.commons-httpclient}"/>
            <pathelement location="${lib.commons-logging}"/>
            <pathelement location="${lib.log4j}"/>
            <pathelement location="${lib.commons-pool}"/>
            <pathelement location="${lib.getopt}"/>
            <pathelement location="${lib.jai_codec}"/>
            <pathelement location="${lib.jai_core}"/>
            <pathelement location="${lib.javamail}"/>
            <pathelement location="${lib.jaxrpc}"/>
            <pathelement location="${lib.jhbasic}"/>
            <pathelement location="${lib.jrdf}"/>
            <pathelement location="${lib.saaj}"/>
            <pathelement location="${lib.saxon}"/>
            <pathelement location="${lib.sunxacml}"/>
            <pathelement location="${lib.trippi-core}"/>
            <pathelement location="${lib.wsdl4j}"/>
            <pathelement location="${lib.xerces}"/>
            <pathelement location="${lib.xml-apis}"/>
        </path>
        <map from="${lib.dir}${file.separator}" to=""/>
    </pathconvert>
    <fileset dir="${lib.dir}" id="client-libs.fileset" includes="${client-libs.list}"/>
    
    <!-- -->
    <taskdef resource="axis-tasks.properties" classpathref="axis.classpath" />
    
    <!-- MacroDefs -->
    <macrodef name="md-compile">
        <attribute name="classpathref" default="compile.classpath"/>
        <attribute name="destdir"/>
        <attribute name="excludes" default=""/>
        <attribute name="fork" default="no"/>
        <attribute name="includes" default=""/>
        <attribute name="srcdir"/>
        <sequential>
            <mkdir dir="@{destdir}"/>
            <javac classpathref="@{classpathref}" 
                   debug="${javac.debug}" 
                   deprecation="${javac.deprecation}" 
                   destdir="@{destdir}" 
                   excludes="@{excludes}" 
                   fork="@{fork}"
                   includes="@{includes}"
                   optimize="${javac.optimize}" 
                   source="${javac.source}" 
                   srcdir="@{srcdir}"
                   target="${javac.target}"/>
        </sequential>
    </macrodef>
    
    <macrodef name="md-localservice">
        <attribute name="service"/>
        <attribute name="libs.path"/>
        <sequential>
            <mkdir dir="${war.build.dir}/@{service}/WEB-INF/lib"/>
            <copy todir="${war.build.dir}/@{service}">
                <fileset dir="${war.src.dir}/@{service}"/>
            </copy>
            <copy todir="${war.build.dir}/@{service}/WEB-INF/classes/fedora/localservices/@{service}">
                <fileset dir="${localservices.build.dir}/fedora/localservices/@{service}"/>
            </copy>     

            <pathconvert pathsep="," property="@{service}-libs.list" refid="@{libs.path}">
                <mapper type="flatten"/>
            </pathconvert>
            <fileset dir="${lib.dir}" id="@{service}-libs.fileset" includes="${@{service}-libs.list}"/>
            <copy todir="${war.build.dir}/@{service}/WEB-INF/lib">
                <fileset refid="@{service}-libs.fileset"/>
            </copy>
            
            <jar destfile="${dist.dir}/@{service}.war" basedir="${war.build.dir}/@{service}"/>
        </sequential>
    </macrodef>

    <!-- targets -->
    <target name="init">
        <tstamp>
        	<format property="build.tstamp" pattern="yyyy-MM-dd'T'HH:mm:ss'Z'" timezone="UTC"/>
    	</tstamp>
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${dist.dir}"/>
    </target>
    
    <target name="clean">
        <delete dir="${build.dir}"/> 
        <delete dir="${dist.dir}"/>
    </target>
    
    <target name="compile-client" depends="init, stubwrappers"
        description="">
        <md-compile 
            srcdir="${java.src.dir}:${wsdl.build.dir}:${stubwrappers.build.dir}" 
            destdir="${client.build.dir}/classes" 
            includes="fedora/client/**,
                      fedora/common/**,
                      fedora/server/access/FedoraAPIABindingSOAPHTTPStub.java
                      fedora/server/management/APIMStub.java,
                      fedora/server/management/FedoraAPIMBindingSOAPHTTPStub.java,
                      fedora/server/utilities/MethodInvokerThread.java,
                      fedora/server/utilities/StreamUtility.java,
                      fedora/swing/jhelp/**,
                      fedora/swing/jtable/**,
                      fedora/swing/mdi/**"/>
    </target>
	
	<target name="compile-junit" depends="compile-server, compile-client, compile-util">
		<md-compile srcdir="${junit.src.dir}"
					destdir="${junit.build.dir}"
					classpathref="junit.classpath"/>
        <copy todir="${junit.build.dir}" file="${junit.src.dir}/log4j.xml"/>
	</target>
    
    <target name="compile-localservices" depends="init" 
            description="Generate java classes for local services">
        <md-compile srcdir="${java.src.dir}/fedora/localservices" 
                    destdir="${localservices.build.dir}"/>
    </target>
    
    <target name="compile-server" depends="init, wsdl2java">
        <md-compile 
            srcdir="${java.src.dir}:${wsdl.build.dir}" 
            destdir="${server.build.dir}/classes" 
            includes="fedora/server/**, 
                      fedora/logging/**,
                      fedora/oai/**,
                      fedora/common/**,
                      org/apache/**,
                      org/xmlpull/**,
                      org/kxml2/**"
            excludes="fedora/server/management/FedoraAPIMBindingSOAPHTTPImpl.java,
                      fedora/server/management/FedoraAPIMServiceLocator.java,
                      fedora/server/access/FedoraAPIABindingSOAPHTTPImpl.java,
                      fedora/server/access/FedoraAPIAServiceLocator.java"/>            
    </target>
    
    <target name="compile-util" depends="init"
        description="">
        <md-compile 
            srcdir="${java.src.dir}"
            destdir="${util.build.dir}"
            includes="fedora/utilities/**"/>
        <jar jarfile="${util.build.dir}/fedora-utilities.jar" 
             basedir="${util.build.dir}"
             excludes="fedora-utilities.jar"/>
    </target>
    
    <target name="server" depends="compile-server"
            description="">
        <mkdir dir="${fedora.home.build.dir}/server/access"/>
        <mkdir dir="${fedora.home.build.dir}/server/bin"/>
        <mkdir dir="${fedora.home.build.dir}/server/config"/>
        <mkdir dir="${fedora.home.build.dir}/server/management"/>
        <mkdir dir="${fedora.home.build.dir}/server/schematron"/>
        <mkdir dir="${fedora.home.build.dir}/server/xsd"/>
        <mkdir dir="${fedora.home.build.dir}/server/fedora-internal-use/config"/>
        <mkdir dir="${fedora.home.build.dir}/server/fedora-internal-use/deploy"/>
        <mkdir dir="${fedora.home.build.dir}/server/fedora-internal-use/fedora-internal-use-backend-service-policies"/>
        <mkdir dir="${fedora.home.build.dir}/server/fedora-internal-use/fedora-internal-use-repository-policies-approximating-2.0"/>
        <mkdir dir="${fedora.home.build.dir}/server/fedora-internal-use/fedora-internal-use-surrogate-policies"/>
        
        <copy todir="${server.build.dir}/classes">
            <fileset dir="${src.dir}/properties/server"/>
            <fileset dir="${src.dir}/dbspec/server"/>
        	<fileset dir="${java.src.dir}">
        		<include name="**/*.betwixt"/>
            </fileset>
        	<filterset>
                <filter token="buildNumber" value="${build.tstamp}"/>
            </filterset>
        </copy>
        
        <copy file="inc/truststore" todir="${fedora.home.build.dir}/server"/>
        
        <copy todir="${fedora.home.build.dir}/server/access">
            <fileset dir="${xsl.src.dir}/access">
                <include name="*.xslt"/>
            </fileset>
            <fileset file="${wsdl.src.dir}/Fedora-API-A.wsdl"/>
            <fileset file="${wsdl.src.dir}/Fedora-API-A-LITE.wsdl"/>
        </copy>
        
        <copy todir="${fedora.home.build.dir}/server/bin">
            <fileset dir="${src.dir}/bat/server"/>
            <fileset dir="${src.dir}/sh/server"/>
        </copy>
        
        <chmod perm="ugo+x" type="file">
            <fileset dir="${fedora.home.build.dir}/server/bin">
                <include name="*.sh"/>
            </fileset>
        </chmod>
        
        <copy todir="${fedora.home.build.dir}/server/config">
            <fileset dir="${src.dir}/fcfg/server">
                <include name="**/my.properties"/>
            </fileset>
        </copy>
        
        <copy todir="${fedora.home.build.dir}/server/management">
            <fileset dir="${xsl.src.dir}/management">
                <include name="*.xslt"/>
            </fileset>
            <fileset file="${wsdl.src.dir}/Fedora-API-M.wsdl"/>
            <fileset file="${wsdl.src.dir}/Fedora-API-M-LITE.wsdl"/>
        </copy>
        
        <copy todir="${fedora.home.build.dir}/server/schematron">
            <fileset dir="${src.dir}/schematron">
                <include name="*.xml"/>
                <include name="*.xslt"/>
            </fileset>
        </copy>
        
        <copy todir="${fedora.home.build.dir}/server/xsd">
            <fileset dir="${src.dir}/xsd">
                <include name="**/*.xsd"/>
            </fileset>
        </copy>

        <!-- Copy and modify Axis deployment files -->
        <copy file="${wsdl.build.dir}/fedora/server/management/deploy.wsdd" todir="${fedora.home.build.dir}/server/fedora-internal-use/deploy"/>
        <copy file="${wsdl.build.dir}/fedora/server/access/deploy.wsdd" tofile="${fedora.home.build.dir}/server/fedora-internal-use/deploy/deployAPI-A.wsdd"/>
        <copy file="${wsdl.build.dir}/fedora/server/management/undeploy.wsdd" todir="${fedora.home.build.dir}/server/fedora-internal-use/deploy"/>
        <copy file="${wsdl.build.dir}/fedora/server/access/undeploy.wsdd" tofile="${fedora.home.build.dir}/server/fedora-internal-use/deploy/undeployAPI-A.wsdd"/>
        <replace file="${fedora.home.build.dir}/server/fedora-internal-use/deploy/deploy.wsdd" token="Fedora-API-M-Port-SOAPHTTP" value="management"/>
        <replace file="${fedora.home.build.dir}/server/fedora-internal-use/deploy/deployAPI-A.wsdd" token="Fedora-API-A-Port-SOAPHTTP" value="access"/>
        <replace file="${fedora.home.build.dir}/server/fedora-internal-use/deploy/deploy.wsdd" token="*&quot;/&gt;" value="*&quot;/&gt;&lt;parameter name=&quot;scope&quot; value=&quot;application&quot;/&gt;"/>
        <replace file="${fedora.home.build.dir}/server/fedora-internal-use/deploy/deployAPI-A.wsdd" token="*&quot;/&gt;" value="*&quot;/&gt;&lt;parameter name=&quot;scope&quot; value=&quot;application&quot;/&gt;"/>
        <replace file="${fedora.home.build.dir}/server/fedora-internal-use/deploy/undeploy.wsdd" token="Fedora-API-M-Port-SOAPHTTP" value="management"/>
        <replace file="${fedora.home.build.dir}/server/fedora-internal-use/deploy/undeployAPI-A.wsdd" token="Fedora-API-A-Port-SOAPHTTP" value="access"/>

        <!-- xacml:  set up policy directories -->
        <copy file="${xacml.src.dir}/readme.txt" todir="${fedora.home.build.dir}/server/fedora-internal-use"/>
        <copy file="${xacml.src.dir}/readme-design-choices.txt" todir="${fedora.home.build.dir}/server/fedora-internal-use"/>
        <copy todir="${fedora.home.build.dir}/server/fedora-internal-use/fedora-internal-use-repository-policies-approximating-2.0">
            <fileset dir="${xacml.src.dir}/default/default-repository-policies-approximating-2.0"/>
        </copy>
        <copy todir="${fedora.home.build.dir}/server/fedora-internal-use/fedora-internal-use-surrogate-policies">
            <fileset dir="${xacml.src.dir}/default/default-surrogate-policies"/>
        </copy>
        
        <java classname="fedora.common.policy.Release2_1Namespace" 
            classpath="${server.build.dir}/classes;${lib.jrdf}" 
            output="${fedora.home.build.dir}/server/fedora-internal-use/vocabulary.txt"/>
            
        <copy file="${xsl.src.dir}/security/build-backend-policy.xsl" 
            todir="${fedora.home.build.dir}/server/fedora-internal-use"/>        
        
        <!-- fedora configuration files -->
        <copy todir="${fedora.home.build.dir}/server/fedora-internal-use/config">
            <fileset dir="src/fcfg/server">
                <include name="**/fedora-base.fcfg"/>
                <include name="**/fedora-*.properties"/>
                <include name="**/logging.properties"/>
                <include name="**/*.xml"/>
            </fileset>
        </copy>
        
        <!-- copy initial setup defaults (in lieu of fedora-setup) -->
        <copy file="${fedora.home.build.dir}/server/fedora-internal-use/config/beSecurity-secure-apim.xml" 
            tofile="${fedora.home.build.dir}/server/config/beSecurity.xml"/>
    </target>
	
	<target name="fedorahome" depends="server, client">
		<zip destfile="${dist.dir}/fedorahome.zip"
			basedir="${fedora.home.build.dir}"/>
	</target>
    
    <target name="war" depends="server"
        description="Build the Fedora Web Application aRchive">

        <mkdir dir="${fedora.war.build.dir}/WEB-INF/classes"/>
        <mkdir dir="${fedora.war.build.dir}/WEB-INF/lib"/>
        <mkdir dir="${fedora.war.build.dir}/images"/>
    	<mkdir dir="${fedora.war.build.dir}/ri"/>
        
        <!-- Deploy API-M and API-A offline (updates existing server-config.wsdd) -->
        <java classname="org.apache.axis.utils.Admin" 
            fork="true" 
            dir="${fedora.war.build.dir}/WEB-INF"> 
            <arg value="server"/> 
            <arg value="${fedora.home.build.dir}/server/fedora-internal-use/deploy/deploy.wsdd"/> 
            <arg value="${fedora.home.build.dir}/server/fedora-internal-use/deploy/deployAPI-A.wsdd"/> 
            <classpath> 
                <pathelement location="${server.build.dir}/classes"/> 
                <path refid="axis.classpath"/> 
            </classpath> 
        </java>
        
    	<copy file="${src.dir}/images/server/newlogo2.jpg" todir="${fedora.war.build.dir}/images"/>
        
    	<copy todir="${fedora.war.build.dir}/ri">
            <fileset dir="src/xsl/ri"/>
        </copy>
    	
        <copy todir="${fedora.war.build.dir}">
            <fileset dir="${war-fedora.src.dir}"/>
        </copy>
        
        <copy todir="${fedora.war.build.dir}/WEB-INF/classes">
            <fileset dir="${server.build.dir}/classes"/>
        </copy>
        
        <copy todir="${fedora.war.build.dir}/WEB-INF/lib">
            <fileset refid="server-libs.fileset"/>
        </copy>
        
        <jar jarfile="${dist.dir}/fedora.war" basedir="${fedora.war.build.dir}"/>
    </target>

    <target name="check-wsdl2java">
        <uptodate property="wsdl2java.uptodate"
                  targetfile="${wsdl.build.dir}/Fedora-API-M.wsdl">
            <srcfiles dir="." includes="${wsdl.src.dir}/*.wsdl,
                                        ${xsd.src.dir}/*.xsd"/>
        </uptodate>
    </target>
    
    <target name="wsdl2java" 
            depends="init,check-wsdl2java" 
            unless="wsdl2java.uptodate"
            description="Generate Java classes from WSDL for API-M and API-A">
        <mkdir dir="${wsdl.build.dir}"/>
        <copy file="${wsdl.src.dir}/Fedora-API-M.wsdl" todir="${wsdl.build.dir}"/>
        <copy file="${wsdl.src.dir}/Fedora-API-A.wsdl" todir="${wsdl.build.dir}"/>
        <copy file="${xsd.src.dir}/fedora-auditing.xsd" todir="${wsdl.build.dir}"/>
        <copy file="${xsd.src.dir}/fedora-behavior-bind.xsd" todir="${wsdl.build.dir}"/>
        <copy file="${xsd.src.dir}/fedora-types.xsd" todir="${wsdl.build.dir}"/>
        <axis-wsdl2java
            output="${wsdl.build.dir}"
            serverside="true"
            skeletondeploy="true"
            url="${wsdl.build.dir}/Fedora-API-M.wsdl" >
            <mapping
                namespace="http://www.fedora.info/definitions/1/0/api/"
                package="fedora.server.management" />
            <mapping
                namespace="http://www.fedora.info/definitions/1/0/auditing/"
                package="fedora.server.types.gen" />
            <mapping
                namespace="http://www.fedora.info/definitions/1/0/binding/"
                package="fedora.server.types.gen" />
            <mapping
                namespace="http://www.fedora.info/definitions/1/0/types/"
                package="fedora.server.types.gen" />
        </axis-wsdl2java>
        <axis-wsdl2java
            output="${wsdl.build.dir}"
            serverside="true"
            skeletondeploy="true"
            url="${wsdl.build.dir}/Fedora-API-A.wsdl" >
            <mapping
                namespace="http://www.fedora.info/definitions/1/0/api/"
                package="fedora.server.access" />
            <mapping
                namespace="http://www.fedora.info/definitions/1/0/types/"
                package="fedora.server.types.gen" />
        </axis-wsdl2java>
    </target>
    
    <target name="client" depends="compile-client, client-jar"
        description="">
        <mkdir dir="${fedora.home.build.dir}/client/bin"/>
        <mkdir dir="${fedora.home.build.dir}/client/demo/batch-demo/object-specifics"/>
        <mkdir dir="${fedora.home.build.dir}/client/demo/batch-demo/objects"/>
        <mkdir dir="${fedora.home.build.dir}/client/demo/foxml"/>
        <mkdir dir="${fedora.home.build.dir}/client/demo/mets"/>
        <mkdir dir="${fedora.home.build.dir}/client/demo/soapclient"/>
        <mkdir dir="${fedora.home.build.dir}/client/lib"/>
        
        <copy file="inc/truststore" toFile="${fedora.home.build.dir}/client/truststore"/>
        
        <copy todir="${fedora.home.build.dir}/client/lib">
            <fileset refid="client-libs.fileset"/>
        </copy>
        
        <copy todir="${fedora.home.build.dir}/client/bin">
            <fileset dir="${src.dir}/bat/client"/>
            <fileset dir="${src.dir}/sh/client"/>
        </copy>

        <chmod perm="ugo+x" type="file">
            <fileset dir="${fedora.home.build.dir}/client/bin">
                <include name="*.sh"/>
            </fileset>
        </chmod>
        
        <copy todir="${fedora.home.build.dir}/client/demo/foxml">
            <fileset dir="${src.dir}/demo-objects/foxml"/>
        </copy>
        <copy todir="${fedora.home.build.dir}/client/demo/mets">
            <fileset dir="${src.dir}/demo-objects/mets"/>
        </copy>
        <!-- SOAP demo client (simple java reference client) -->
        <copy todir="${fedora.home.build.dir}/client/demo/soapclient">
            <fileset dir="${src.dir}/demo-soapclient"/>
        </copy>
        
        <!-- Prepare batch demo-->
        <!-- Why are these being copied to lib? -->
        <copy file="${src.dir}/xsl/batchtool/mets-merge.xsl" todir="${fedora.home.build.dir}/client/lib"/>
        <copy file="${src.dir}/xsl/batchtool/foxml-merge.xsl" todir="${fedora.home.build.dir}/client/lib"/>
        
        <copy todir="${fedora.home.build.dir}/client/demo/batch-demo">
            <fileset dir="${src.dir}/demo-objects/mets/batch-demo"/>
        </copy>
        <copy todir="${fedora.home.build.dir}/client/demo/batch-demo/object-specifics">
            <fileset dir="${src.dir}/xml/batch-demo/object-specifics"/>
        </copy>        
    </target>
    
    <target name="client-jar" depends="compile-client"
            description="">
        <mkdir dir="${client.build.dir}/classes/help"/>
        <mkdir dir="${client.build.dir}/classes/images"/>
        <mkdir dir="${fedora.home.build.dir}/client"/>
        
        <copy todir="${client.build.dir}/classes/images">
            <fileset dir="${src.dir}/images/client"/>
        </copy>
        
        <copy todir="${client.build.dir}/classes">
            <fileset dir="${src.dir}/properties/client"/>
            <filterset>
                <filter token="version" value="${fedora.version}"/>
                <filter token="releaseDate" value="${fedora.releaseDate}"/>
            </filterset>
        </copy>
        
        <copy todir="${client.build.dir}/classes/help">
            <fileset dir="src/html/client/help"/>
            <fileset dir="src/images/client/help"/>
            <fileset dir="src/jhelp"/>
        </copy>
        
        <!-- Create the client manifest classpath -->
        <pathconvert pathsep=" " property="client.mfs.classpath" refid="client-libs.path">
            <map from="${lib.dir}${file.separator}" to="lib/"/>
        </pathconvert>
        
        <jar destfile="${fedora.home.build.dir}/client/fedora-client.jar" 
             basedir="${client.build.dir}/classes">
            <manifest>
                <attribute name="Main-Class" value="fedora.client.Administrator"/>
                <attribute name="Class-Path" value="${client.mfs.classpath}"/>
            </manifest>
        </jar>
    </target>
    
    <target name="localservices" depends="init, compile-localservices"
        description="">
        
        <path id="fop-libs.path">
            <pathelement location="${lib.avalon-framework}"/>
            <pathelement location="${lib.batik}"/>
            <pathelement location="${lib.fop}"/>
        </path>
        <md-localservice service="fop" libs.path="fop-libs.path"/>
        
        <path id="imagemanip-libs.path">
            <pathelement location="${lib.commons-httpclient}"/>
            <pathelement location="${lib.ij}"/>
            <pathelement location="${lib.jai_codec}"/>
            <pathelement location="${lib.jai_core}"/>
        </path>
        <md-localservice service="imagemanip" libs.path="imagemanip-libs.path"/>
        
        <path id="saxon-libs.path">
            <pathelement location="${lib.saxon}"/>
            <pathelement location="${lib.commons-httpclient}"/>
        </path>
        <md-localservice service="saxon" libs.path="saxon-libs.path"/>
    </target>

    <target name="check-stubwrappers">
        <uptodate property="stubwrappers.uptodate"
                  targetfile="${stubwrappers.build.dir}/uptodate.txt">
            <srcfiles dir="." includes="${wsdl.build.dir}/**,
                                        ${java.src.dir}/fedora/client/FedoraStubWrapper.template"/>
        </uptodate>
    </target>
    
    <target name="stubwrappers" 
            depends="init, compile-util, wsdl2java, check-stubwrappers" 
            unless="stubwrappers.uptodate"
            description="Builds API wrapper stubs">

        <mkdir dir="${stubwrappers.build.dir}/fedora/client"/>
        <!-- Stub wrapper for API-M -->
        <java classname="fedora.utilities.BuildAxisStubWrapper"
              classpath="${util.build.dir}/fedora-utilities.jar" >
            <arg path="${wsdl.build.dir}/fedora/server/management/FedoraAPIMBindingSOAPHTTPStub.java"/>
            <arg path="${java.src.dir}/fedora/client/FedoraStubWrapper.template"/>
            <arg value="fedora.client"/>
            <arg value="APIMStubWrapper"/>
            <arg path="${stubwrappers.build.dir}/fedora/client/APIMStubWrapper.java"/>
        </java>
        <!-- Stub wrapper for API-A -->
        <java classname="fedora.utilities.BuildAxisStubWrapper"
              classpath="${util.build.dir}/fedora-utilities.jar" >
            <arg path="${wsdl.build.dir}/fedora/server/access/FedoraAPIABindingSOAPHTTPStub.java"/>
            <arg path="${java.src.dir}/fedora/client/FedoraStubWrapper.template"/>
            <arg value="fedora.client"/>
            <arg value="APIAStubWrapper"/>
            <arg path="${stubwrappers.build.dir}/fedora/client/APIAStubWrapper.java"/>
        </java>
        <touch file="${stubwrappers.build.dir}/uptodate.txt"/>
    </target>
    
    <target name="dist" depends="fedorahome, war, localservices"/>
    
    <target name="generatedCode" depends="stubwrappers" 
            description="Builds all autogenerated code (e.g. WSDL)">
        <mkdir dir="${build.dir}/generatedCode"/>
        <copy todir="${build.dir}/generatedCode">
            <fileset dir="${stubwrappers.build.dir}">
                <include name="**/*.java"/>
            </fileset>
            <fileset dir="${wsdl.build.dir}">
                <include name="**/*.java"/>
                <exclude name="**/APIAStubWrapper.java"/>
                <exclude name="**/APIMStubWrapper.java"/>
                <exclude name="**/FedoraAPIABindingSOAPHTTPImpl.java"/>
                <exclude name="**/FedoraAPIMBindingSOAPHTTPImpl.java"/>
                <exclude name="**/FedoraAPIAServiceLocator.java"/>
                <exclude name="**/FedoraAPIMServiceLocator.java"/>
            </fileset>
        </copy>
    </target>
    
    <target name="docs" depends="init, wsdl2java"
        description="Generate documentation">
    	
    	<!-- Build javadocs -->
    	<mkdir dir="${docs.build.dir}/javadocs" />
    	<javadoc packagenames="fedora.*" 
    		sourcepath="${java.src.dir};${wsdl.build.dir}" 
    		classpathref="compile.classpath" 
    		destdir="${docs.build.dir}/javadocs" 
    		author="true" 
    		version="true" 
    		use="true" />
    	
    	<mkdir dir="${docs.build.dir}/userdocs"/>
		<copy todir="${docs.build.dir}/userdocs">
			<fileset dir="${docs.src.dir}/userdocs"/>
		</copy>
    	<!-- generate the Fedora xacml vocabulary listing -->
		<mkdir dir="${docs.build.dir}/userdocs/server/security/xacml-policies"/>
		<java classname="fedora.common.policy.Release2_1Namespace" 
			classpath="${tomcat.server.dir}/classes;${lib.jrdf}" 
			output="${docs.build.dir}/userdocs/server/security/xacml-policies/vocabulary.txt"/>
		<!-- copy the default repository-wide policies for linking to documentation -->
		<mkdir dir="${docs.build.dir}/userdocs/server/security/xacml-policies/default/repository-wide"/>
		<copy todir="${docs.build.dir}/userdocs/server/security/xacml-policies/default/repository-wide">
			<fileset dir="src/xml/xacml-policies/default/default-repository-policies-approximating-2.0"/>
		</copy>
		<!-- copy the sample policy collection for linking to documentation -->
		<mkdir dir="${docs.build.dir}/userdocs/server/security/xacml-policies/examples"/>
		<copy todir="${docs.build.dir}/userdocs/server/security/xacml-policies/examples">
			<fileset dir="src/xml/xacml-policies/examples"/>
		</copy>
    </target>
    
	<target name="compile-installer" depends="">
		<md-compile srcdir="${java.src.dir}"
            destdir="${install.build.dir}"
            includes="fedora/utilities/install/**"/>
		<copy file="${java.src.dir}/fedora/utilities/install/OptionDefinition.properties" todir="${install.build.dir}/fedora/utilities/install"/>
		<jar jarfile="${install.build.dir}/install.jar" 
		             basedir="${install.build.dir}"
		             includes="fedora/**">
			<manifest>
				<attribute name="Main-Class" value="fedora.utilities.install.Installer"/>
			</manifest>
		</jar>
	</target>
	
	<!-- FIXME this is just a skeleton for the installer task.-->
	<target name="installer" depends="war, fedorahome, compile-installer, localservices, demo"
		description="Builds an executable jar for installing the Fedora server">
		<loadproperties srcFile="${properties.src.dir}/install.properties"/>
		
		<mkdir dir="${install.build.dir}/resources"/>
		<copy todir="${install.build.dir}/resources">
			<fileset dir="${properties.src.dir}" includes="install.properties"/>
			<fileset dir="${lib.dir}" includes="${install.jdbc.mckoi} ${install.jdbc.mysql}"/>
			<fileset dir="${dist.dir}" includes="fedorahome.zip fedora.war fop.war imagemanip.war saxon.war fedora-demo.war"/>
			<fileset dir="inc" includes="${install.tomcat} ${install.mckoi} keystore jaas.config"/>
		</copy>
		
		<mkdir dir="${install.build.dir}/boot"/>
		<mkdir dir="${install.build.dir}/main"/>
		<mkdir dir="${install.build.dir}/lib"/>
		<copy file="${lib.dom4j}" todir="${install.build.dir}/lib"/>
		<copy file="${lib.jaxen}" todir="${install.build.dir}/lib"/>
		<move file="${install.build.dir}/install.jar" todir="${install.build.dir}/main"/>
		<unjar src="${lib.one-jar}" dest="${install.build.dir}/boot"/>
		<jar jarfile="${dist.dir}/fedora-${fedora.version}-installer.jar" 
			 manifest="${install.build.dir}/boot/boot-manifest.mf">
			<fileset dir="${install.build.dir}/boot"/>
			<fileset dir="${install.build.dir}"
					 includes="main/** lib/** resources/**"/>
		</jar>
	</target>
	
	<target name="junit" depends="compile-junit">
		<property name="fedora.home" value="${env.FEDORA_HOME}"/>
		<property name="javax.net.ssl.trustStore" value="inc/keystore"/>
		<property name="test" value="fedora.test.api.AllAPITests"/>
		
		<copy todir="${junit.build.dir}" includeEmptyDirs="false">
	        <fileset dir="${junit.src.dir}">
                <exclude name="**/*.java"/>
	        </fileset>
        </copy>
		
		<junit printsummary="yes" fork="yes" haltonfailure="yes" showoutput="yes">
			<syspropertyset id="junit.sysproperties">
				<propertyref name="fedora.home"/>
				<propertyref name="javax.net.ssl.trustStore"/>
			</syspropertyset>
			<classpath refid="junit.classpath"/>
			<formatter type="plain" usefile="false"/>
			<test name="${test}"/>
		</junit>
	</target>
	
	<target name="demo">
		<mkdir dir="${demo.war.build.dir}"/>
		<copy todir="${demo.war.build.dir}">
            <fileset dir="${src.dir}/demo-content"/>
        </copy>
		<jar destfile="${dist.dir}/fedora-demo.war" basedir="${demo.war.build.dir}"/>
	</target>
</project>