<?xml version="1.0" encoding="UTF-8"?>
<!--  $Id$ -->
<project name="Fedora" default="dist" basedir=".">
  <description>The Fedora Project</description>

  <!-- set global properties for this build -->
  <property environment="env" />
  <property name="javac.debug" value="on" />
  <property name="javac.deprecation" value="on" />
  <property name="javac.maxwarns" value="100" />
  <property name="javac.source" value="1.5" />
  <property name="javac.target" value="1.5" />

  <property name="repo.home" location="server" />
  <property name="common.home" location="common" />
  <property name="util.home" location="generate" />
  <property name="client.home" location="client" />
  <property name="inttest.home" location="integrationtest" />
  <property name="generate.home" location="generate" />

  <property name="repo.build.dir" location="${repo.home}/build" />
  <property name="common.build.dir" location="${common.home}/build" />
  <property name="client.build.dir" location="${client.home}/build" />
  <property name="inttest.build.dir" location="${inttest.home}/build" />
  <property name="generate.build.dir" location="${generate.home}/build" />

  <property name="api.build.dir" location="${repo.build.dir}/api" />
  <property name="docs.build.dir" location="${repo.build.dir}/docs" />
  <property name="fedora.home.build.dir" location="${repo.build.dir}/home" />
  <property name="install.build.dir" location="${repo.build.dir}/install" />
  <property name="junit.build.dir" location="${repo.build.dir}/java" />
  <property name="localservices.build.dir" location="${repo.build.dir}/localservices" />
  <property name="server.build.dir" location="${repo.build.dir}/server" />
  <property name="journal.build.dir" location="${repo.build.dir}/journal" />
  <property name="util.build.dir" location="${repo.build.dir}/util" />
  <property name="war.build.dir" location="${repo.build.dir}/war" />
  <property name="fedora.war.build.dir" location="${war.build.dir}/fedora" />
  <property name="demo.war.build.dir" location="${war.build.dir}/demo" />
  <property name="wsdl.build.dir" location="${repo.build.dir}/wsdl" />
  <property name="stubwrappers.build.dir" location="${client.home}/stubwrappers" />

  <property name="common.junit.build.dir" location="${common.build.dir}/java" /> 
  <property name="client.junit.build.dir" location="${client.build.dir}/java" /> 
  <property name="inttest.junit.build.dir" location="${inttest.build.dir}/java" /> 

  <property name="dist.dir" location="dist" />
  <property name="lib.dir" location="lib" />
  <property name="license.dir" location="license" />
  
  <property name="resrc.dir" location="resources" />
  <property name="inc.dir" location="${resrc.dir}/inc" />
  <property name="docs.resrc.dir" location="${resrc.dir}/doc" />
  <property name="junit.resrc.dir" location="${resrc.dir}/junit" />
  
  <property name="repo.src.dir" location="${repo.home}/src" />
  <property name="repo.java.dir" location="${repo.src.dir}/main/java" />
  <property name="repo.junit.dir" location="${repo.src.dir}/test/java" />  
  <property name="repo.junit.resrc.dir" location="${repo.src.dir}/test/resources" />  

  <property name="common.src.dir" location="${common.home}/src" />
  <property name="common.java.dir" location="${common.src.dir}/main/java" />
  <property name="common.junit.dir" location="${common.src.dir}/test/java" />  

  <property name="client.src.dir" location="${client.home}/src" />
  <property name="client.java.dir" location="${client.src.dir}/main/java" />
  <property name="client.junit.dir" location="${client.src.dir}/test/java" />  
  <property name="client.resrc.dir" location="${client.src.dir}/main/resources" />  

  <property name="inttest.src.dir" location="${inttest.home}/src" />
  <property name="inttest.java.dir" location="${inttest.src.dir}/main/java" />
  <property name="inttest.junit.dir" location="${inttest.src.dir}/test/java" />  
  <property name="inttest.junit.resrc.dir" location="${inttest.src.dir}/test/resources" />  

  <property name="generate.src.dir" location="${generate.home}/src" />
  <property name="generate.java.dir" location="${generate.src.dir}/main/java" />

  <property name="util.src.dir" location="${util.home}/src" />
  <property name="util.java.dir" location="${util.src.dir}/main/java" />
  <property name="util.junit.dir" location="${util.src.dir}/test/java" />
 
  <property name="repo.resrc.dir" location="${repo.src.dir}/main/resources" />
  <property name="properties.src.dir" location="${repo.resrc.dir}/properties" />
  <property name="demo.src.dir" location="${repo.resrc.dir}/demo" />
  <property name="wsdl.src.dir" location="${resrc.dir}/wsdl" />
  <property name="xacml.src.dir" location="${repo.resrc.dir}/xacml-policies" />
  <property name="xsd.src.dir" location="${repo.resrc.dir}/xsd" />
  <property name="xsl.src.dir" location="${repo.resrc.dir}/xsl" />
  <property name="war.src.dir" location="${repo.resrc.dir}/war" />
  <property name="war-fedora.src.dir" location="${war.src.dir}/fedora" />
  <!-- 
  the following properties are mainly for junit, have to be set globally though due to 
  the application server context replace tasks
  -->
  <property name="fedora.home" value="${env.FEDORA_HOME}" />
  <property name="fedora.username" value="fedoraAdmin" />
  <property name="fedora.password" value="fedoraAdmin" />
  <property name="fedora.protocol" value="http" />
	
  <property name="javax.net.ssl.trustStore" value="${inc.dir}/keystore" />
  <property name="test" value="fedora.test.AllOfflineTests" />
  <property name="common.test" value="fedora.common.AllUnitTests" />
  <property name="client.test" value="fedora.client.AllUnitTests" />
  <property name="server.test" value="fedora.server.AllOfflineTests" />
  <property name="org.apache.activemq.default.directory.prefix" value="${junit.build.dir}${file.separator}" />

  <!-- load external properties files -->
  <loadproperties srcFile="${properties.src.dir}/lib.properties" />
  <loadproperties srcFile="${resrc.dir}/server/fedora/server/resources/Server.properties">
    <filterchain>
      <linecontains>
        <contains value="version." />
      </linecontains>
    </filterchain>
  </loadproperties>

  <!-- get the current Subversion revision number -->
  <loadfile property="revision" srcFile=".svn/entries" failonerror="false">
    <filterchain>
      <headfilter lines="1" skip="3" />
      <deletecharacters chars="\n" />
      <trim />
    </filterchain>
  </loadfile>

  <!-- set the version of Fedora (will append Subversion revision number
  unless "release" property is set, e.g. "ant -Drelease=true installer") -->
  <condition property="fedora.version" value="${version.major}.${version.minor}" else="${version.major}.${version.minor}r${revision}">
    <or>
      <isset property="release" />
      <not>
        <isset property="revision" />
      </not>
    </or>
  </condition>
  <property name="fedora.releaseDate" value="${version.releaseDate}" />

  <!-- classpaths -->
  <path id="axis.classpath">
    <pathelement location="${lib.activation}" />
    <pathelement location="${lib.axis}" />
    <pathelement location="${lib.axis-ant}" />
    <pathelement location="${lib.commons-discovery}" />
    <pathelement location="${lib.commons-logging}" />
    <pathelement location="${lib.javamail}" />
    <pathelement location="${lib.jaxrpc-api}" />
    <pathelement location="${lib.saaj-api}" />
    <pathelement location="${lib.wsdl4j}" />
  </path>

  <path id="common.classpath">
    <fileset dir="${common.build.dir}">
      <include name="**/*.jar" />
    </fileset>
  </path>

  <path id="client.classpath">
    <fileset dir="${client.build.dir}">
      <include name="**/*.jar" />
    </fileset>
  </path>

 <path id="compile.classpath">
    <path refid="common.classpath" />
    <path refid="client.classpath" />
    <fileset dir="${lib.dir}">
      <include name="**/*.jar" />
    </fileset>
  </path>

  <path id="junit.classpath">
    <path refid="compile.classpath" />
    <pathelement path="${resrc.dir}/server" />
    <pathelement path="${junit.build.dir}" />
    <pathelement path="${inttest.junit.build.dir}" />
    <pathelement path="${common.junit.build.dir}" />
    <pathelement path="${client.junit.build.dir}" />
    <pathelement path="${client.build.dir}/classes" />
    <pathelement path="${server.build.dir}/classes" />
    <pathelement path="${util.build.dir}" />
  </path>

  <pathconvert pathsep="," property="server-libs.list">
    <path id="server-libs.path">
      <pathelement location="${lib.avalon-framework}" />
      <pathelement location="${lib.batik}" />
      <pathelement location="${lib.dom4j}" />
      <pathelement location="${lib.fop}" />
      <pathelement location="${lib.ij}" />
      <pathelement location="${lib.jai_codec}" />
      <pathelement location="${lib.jai_core}" />
      <pathelement location="${lib.jaxen}" />
      <pathelement location="${lib.jtidy}" />
      <pathelement location="${lib.log4j}" />
      <pathelement location="${lib.md5}" />
      <pathelement location="${lib.oro}" />
      <pathelement location="${lib.sunxacml}" />
      <pathelement location="${lib.xmlpull}" />
      <pathelement location="${lib.xpp3}" />

      <pathelement location="${lib.activation}" />
      <pathelement location="${lib.castor}" />
      <pathelement location="${lib.castor-xml}" />
      <pathelement location="${lib.castor-schema}" />
      <pathelement location="${lib.emory-util}" />
      <pathelement location="${lib.jca}" />
      <pathelement location="${lib.joda-time}" />
      <pathelement location="${lib.jotm}" />
      <pathelement location="${lib.jotm-carol}" />
      <pathelement location="${lib.jotm-howl}" />
      <pathelement location="${lib.jotm-iiop}" />
      <pathelement location="${lib.jta}" />
      <pathelement location="${lib.lucene}" />
      <pathelement location="${lib.mptstore}" />
      <pathelement location="${lib.mulgara}" />
      <pathelement location="${lib.openrdf-model}" />
      <pathelement location="${lib.slf4j-api}" />
      <pathelement location="${lib.slf4j-jdk14}" />
      <pathelement location="${lib.trippi-core}" />
      <pathelement location="${lib.trippi-mulgara}" />
      <pathelement location="${lib.trippi-mptstore}" />
      <pathelement location="${lib.trove}" />

      <pathelement location="${lib.commons-beanutils}" />
      <pathelement location="${lib.commons-betwixt}" />
      <pathelement location="${lib.commons-codec}" />
      <pathelement location="${lib.commons-digester}" />
      <pathelement location="${lib.commons-fileupload}" />
      <pathelement location="${lib.commons-httpclient}" />
      <pathelement location="${lib.commons-io}" />
      <pathelement location="${lib.saxon}" />
      <pathelement location="${lib.saxon-dom}" />

      <pathelement location="${lib.staxapi}" />
      <pathelement location="${lib.sjsxp}" />
      <pathelement location="${lib.staxutil}" />

      <pathelement location="${lib.axis}" />
      <pathelement location="${lib.commons-discovery}" />
      <pathelement location="${lib.commons-logging}" />
      <pathelement location="${lib.javamail}" />
      <pathelement location="${lib.jaxrpc-api}" />
      <pathelement location="${lib.saaj-api}" />
      <pathelement location="${lib.tt-bytecode}" />
      <pathelement location="${lib.wsdl4j}" />

      <!-- Jersey (JSR311) libs -->
      <pathelement location="${lib.fedora-rest}" />
      <pathelement location="${lib.jsr311-api}" />
      <pathelement location="${lib.jersey}" />
      <pathelement location="${lib.jsr250-api}" />
      <pathelement location="${lib.persistence-api}" />
      <pathelement location="${lib.jdom}" />
      <pathelement location="${lib.rome}" />
      <pathelement location="${lib.jettison}" />
      <pathelement location="${lib.localizer}" />
      <pathelement location="${lib.jaxb-api}" />
      <pathelement location="${lib.jaxb-impl}" />
      <pathelement location="${lib.asm}" />

      <!-- DBCP libs (removed by installer if installed to Tomcat 5.0.x-->
      <pathelement location="${lib.commons-collections}" />
      <pathelement location="${lib.commons-dbcp}" />
      <pathelement location="${lib.commons-pool}" />

      <!-- JAXP libs (may be able to remove these in next release) -->
      <pathelement location="${lib.xerces}" />
      <pathelement location="${lib.xml-apis}" />

      <!-- Abdera libs -->
      <pathelement location="${lib.abdera-il8n}" />
      <pathelement location="${lib.abdera.core}" />
      <pathelement location="${lib.abdera.extensions}" />
      <pathelement location="${lib.abdera.parser}" />
      <pathelement location="${lib.axiom-api}" />
      <pathelement location="${lib.axiom-impl}" />

      <!-- ActiveMQ libs -->
      <pathelement location="${lib.activemq-all}" />

      <!-- Spring libs -->
      <pathelement location="${lib.spring-core}"/>
      <pathelement location="${lib.spring-beans}"/>
      
      <!-- Akubra libs -->
      <pathelement location="${lib.akubra-core}"/>
      <pathelement location="${lib.akubra-fs}"/>
      <pathelement location="${lib.akubra-map}"/>
      <pathelement location="${lib.akubra-mem}"/>
      <pathelement location="${lib.google-collections}"/>
    </path>
    <map from="${lib.dir}${file.separator}" to="" />
  </pathconvert>
  <fileset dir="${lib.dir}" id="server-libs.fileset" includes="${server-libs.list}" />

  <pathconvert pathsep="," property="client-libs.list">
    <path id="client-libs.path">
      <pathelement location="${lib.activation}" />
      <pathelement location="${lib.axis}" />
      <pathelement location="${lib.batik}" />
      <pathelement location="${lib.commons-codec}" />
      <pathelement location="${lib.commons-dbcp}" />
      <pathelement location="${lib.commons-discovery}" />
      <pathelement location="${lib.commons-httpclient}" />
      <pathelement location="${lib.commons-logging}" />
      <pathelement location="${lib.log4j}" />
      <pathelement location="${lib.commons-pool}" />
      <pathelement location="${lib.getopt}" />
      <pathelement location="${lib.jai_codec}" />
      <pathelement location="${lib.jai_core}" />
      <pathelement location="${lib.javamail}" />
      <pathelement location="${lib.jaxrpc-api}" />
      <pathelement location="${lib.jhbasic}" />
      <pathelement location="${lib.mulgara}" />
      <pathelement location="${lib.openrdf-model}" />
      <pathelement location="${lib.saaj-api}" />
      <pathelement location="${lib.saxon}" />
      <pathelement location="${lib.slf4j-api}" />
      <pathelement location="${lib.slf4j-jdk14}" />
      <pathelement location="${lib.sunxacml}" />
      <pathelement location="${lib.trippi-core}" />
      <pathelement location="${lib.wsdl4j}" />
      <pathelement location="${lib.xerces}" />
      <pathelement location="${lib.xml-apis}" />
    </path>
    <map from="${lib.dir}${file.separator}" to="" />
  </pathconvert>
  <fileset dir="${lib.dir}" id="client-libs.fileset" includes="${client-libs.list}" />

  <!-- -->
  <taskdef resource="axis-tasks.properties" classpathref="axis.classpath" />

  <!-- As of 2.2, we require at least Java 5. So we assume here that if the 
  specification version is not 1.5, it is Java 6 or greater, and hence, at 
  least jdbc4 or above -->
  <condition property="jdbc3">
    <equals arg1="${java.specification.version}" arg2="1.5" />
  </condition>

  <!-- MacroDefs -->
  <macrodef name="md-compile">
    <attribute name="classpathref" default="compile.classpath" />
    <attribute name="destdir" />
    <attribute name="excludes" default="" />
    <attribute name="fork" default="no" />
    <attribute name="includes" default="" />
    <attribute name="srcdir" />
    <attribute name="compilerargs" default="" />
    <!-- default="-Xlint -Xlint:-path -Xmaxwarns ${javac.maxwarns}" -->
    <sequential>
      <mkdir dir="@{destdir}" />
      <javac classpathref="@{classpathref}" debug="${javac.debug}" deprecation="${javac.deprecation}" destdir="@{destdir}" excludes="@{excludes}" fork="@{fork}" includes="@{includes}" source="${javac.source}" srcdir="@{srcdir}" target="${javac.target}" encoding="UTF-8">
        <compilerarg line="@{compilerargs}" />
      </javac>
    </sequential>
  </macrodef>

  <macrodef name="md-localservice">
    <attribute name="service" />
    <attribute name="libs.path" />
    <sequential>
      <mkdir dir="${war.build.dir}/@{service}/WEB-INF/lib" />
      <copy todir="${war.build.dir}/@{service}">
        <fileset dir="${war.src.dir}/@{service}" />
      </copy>
      <copy todir="${war.build.dir}/@{service}/WEB-INF/classes/fedora/localservices/@{service}">
        <fileset dir="${localservices.build.dir}/fedora/localservices/@{service}" />
      </copy>

      <pathconvert pathsep="," property="@{service}-libs.list" refid="@{libs.path}">
        <mapper type="flatten" />
      </pathconvert>
      <fileset dir="${lib.dir}" id="@{service}-libs.fileset" includes="${@{service}-libs.list}" />
      <copy todir="${war.build.dir}/@{service}/WEB-INF/lib">
        <fileset refid="@{service}-libs.fileset" />
      </copy>

      <jar destfile="${dist.dir}/@{service}.war" basedir="${war.build.dir}/@{service}" />
    </sequential>
  </macrodef>

  <macrodef name="md-convert-objects">
    <attribute name="inputDir" default="${demo.src.dir}/demo-objects/foxml" />
    <attribute name="outputDir" />
    <attribute name="deserializer" default="fedora.server.storage.translation.FOXML1_1DODeserializer" />
    <attribute name="serializer" />
    <attribute name="pretty" default="false" />
    <attribute name="inExt" default="xml" />
    <attribute name="outExt" default="xml" />
    <sequential>
      <java classname="fedora.server.storage.translation.ConvertObjectSerialization">
        <classpath>
          <pathelement path="${server.build.dir}/classes" />
          <pathelement path="${common.build.dir}" />
          <pathelement path="${lib.abdera.core}" />
          <pathelement path="${lib.abdera-il8n}" />
          <pathelement path="${lib.abdera.parser}" />
          <pathelement path="${lib.abdera.extensions}" />
          <pathelement location="${lib.axiom-api}" />
          <pathelement location="${lib.axiom-impl}" />
          <pathelement location="${lib.jaxen}" />
          <pathelement location="${lib.activation}" />
          <pathelement path="${lib.log4j}" />
          <pathelement path="${lib.xerces}" />
          <pathelement path="${lib.staxapi}" />
          <pathelement path="${lib.sjsxp}" />
          <pathelement path="${lib.trippi-core}" />
          <pathelement path="${lib.openrdf-model}" />
          <pathelement location="${lib.slf4j-api}" />
          <pathelement location="${lib.slf4j-jdk14}" />
          <pathelement path="${lib.commons-httpclient}" />
          <pathelement path="${lib.commons-logging}" />
          <pathelement path="${lib.commons-io}" />
          <pathelement path="${lib.mulgara}" />
        </classpath>
        <arg path="@{inputDir}" />
        <arg path="@{outputDir}" />
        <arg value="@{deserializer}" />
        <arg value="@{serializer}" />
        <arg value="@{pretty}" />
        <arg value="@{inExt}" />
        <arg value="@{outExt}" />
      </java>
    </sequential>
  </macrodef>

  <!-- targets -->
  <target name="init">
    <tstamp>
      <format property="build.tstamp" pattern="yyyyMMdd'T'HHmmss'Z'" timezone="UTC" />
    </tstamp>
    <mkdir dir="${repo.build.dir}" />
    <mkdir dir="${common.build.dir}" />
    <mkdir dir="${client.build.dir}" />
    <mkdir dir="${util.build.dir}" />
    <mkdir dir="${inttest.build.dir}" />
    <mkdir dir="${dist.dir}" />
  </target>

  <target name="clean">
    <delete dir="${repo.build.dir}" />
    <delete dir="${common.build.dir}" />
    <delete dir="${client.build.dir}" />
    <delete dir="${util.build.dir}" />
    <delete dir="${inttest.build.dir}" />
    <delete dir="${dist.dir}" />
  </target>

  <target name="compile-client" depends="init, compile-common, compile-server, stubwrappers" description="">
    <md-compile srcdir="${client.java.dir}:${common.java.dir}:${repo.java.dir}:${wsdl.build.dir}:${stubwrappers.build.dir}" destdir="${client.build.dir}/classes" includes="fedora/client/**,
      fedora/common/**,
      fedora/server/access/FedoraAPIABindingSOAPHTTPStub.java
      fedora/server/management/APIMStub.java,
      fedora/server/management/FedoraAPIMBindingSOAPHTTPStub.java,
      fedora/server/utilities/MethodInvokerThread.java,
      fedora/server/utilities/StreamUtility.java,
      fedora/swing/jtable/**,
      fedora/swing/mdi/**" />
  </target>

  <target name="compile-junit-common" depends="compile-common">
    <md-compile srcdir="${common.junit.dir}" destdir="${common.junit.build.dir}" classpathref="junit.classpath" />
    <copy todir="${common.junit.build.dir}" file="${junit.resrc.dir}/log4j.xml" />
  </target>

  <target name="compile-junit-inttest" depends="compile-junit, compile-junit-common, compile-junit-client, server, client">
    <md-compile srcdir="${inttest.junit.dir}" destdir="${inttest.junit.build.dir}" classpathref="junit.classpath" />
    <copy todir="${inttest.junit.build.dir}" file="${junit.resrc.dir}/log4j.xml" />
  </target>

  <target name="compile-junit-client" depends="compile-client,compile-junit-common">
    <md-compile srcdir="${client.junit.dir}" destdir="${client.junit.build.dir}" classpathref="junit.classpath" />
    <copy todir="${client.junit.build.dir}" file="${junit.resrc.dir}/log4j.xml" />
  </target>

  <target name="compile-junit" depends="compile-junit-common, compile-server, client-jar, compile-util">
    <md-compile srcdir="${repo.junit.dir}" destdir="${junit.build.dir}" classpathref="junit.classpath" />
    <copy todir="${junit.build.dir}" file="${junit.resrc.dir}/log4j.xml" />

    <copy todir="${junit.build.dir}">
      <fileset dir="${repo.java.dir}">
        <include name="**/webxml-mapping.xml" />
      </fileset>
    </copy>

    <copy todir="${junit.build.dir}">
      <fileset dir="${resrc.dir}/server">
        <include name="**/OptionDefinition.properties" />
      </fileset>
    </copy>
  </target>

  <target name="compile-localservices" depends="init" description="Generate java classes for local services">
    <md-compile srcdir="${repo.java.dir}/fedora/localservices" destdir="${localservices.build.dir}" />
  </target>

  <target name="prepare-jdbc3" if="jdbc3">
    <echo message="Commenting out jdbc4 additional methods." />
    <replace dir="${repo.java.dir}" token="/* JDBC_4_ANT_TOKEN_BEGIN */" value="/* JDBC_4_ANT_TOKEN_BEGIN -" />
    <replace dir="${repo.java.dir}" token="/* JDBC_4_ANT_TOKEN_END */" value="- JDBC_4_ANT_TOKEN_END */" />
    <replace dir="${repo.junit.dir}" token="/* JDBC_4_ANT_TOKEN_BEGIN */" value="/* JDBC_4_ANT_TOKEN_BEGIN -" />
    <replace dir="${repo.junit.dir}" token="/* JDBC_4_ANT_TOKEN_END */" value="- JDBC_4_ANT_TOKEN_END */" />
  </target>

  <target name="prepare-jdbc4" unless="jdbc3">
    <echo message="Uncommenting jdbc4 additional methods." />
    <replace dir="${repo.java.dir}" token="/* JDBC_4_ANT_TOKEN_BEGIN -" value="/* JDBC_4_ANT_TOKEN_BEGIN */" />
    <replace dir="${repo.java.dir}" token="- JDBC_4_ANT_TOKEN_END */" value="/* JDBC_4_ANT_TOKEN_END */" />
    <replace dir="${repo.junit.dir}" token="/* JDBC_4_ANT_TOKEN_BEGIN -" value="/* JDBC_4_ANT_TOKEN_BEGIN */" />
    <replace dir="${repo.junit.dir}" token="- JDBC_4_ANT_TOKEN_END */" value="/* JDBC_4_ANT_TOKEN_END */" />
  </target>

  <target name="compile-server" depends="init, prepare-jdbc3, prepare-jdbc4, compile-common, wsdl2java">
    <md-compile srcdir="${repo.java.dir}:${wsdl.build.dir}" destdir="${server.build.dir}/classes" includes="fedora/server/**,
      fedora/utilities/**,
      fedora/logging/**,
      fedora/oai/**,
      fedora/common/**,
      org/apache/**,
      org/xmlpull/**,
      org/kxml2/**" excludes="fedora/server/management/FedoraAPIMBindingSOAPHTTPImpl.java,
      fedora/server/management/FedoraAPIMServiceLocator.java,
      fedora/server/access/FedoraAPIABindingSOAPHTTPImpl.java,
      fedora/server/access/FedoraAPIAServiceLocator.java" />
    <copy todir="${server.build.dir}/classes">
      <fileset dir="${resrc.dir}/server" />
      <fileset dir="${repo.resrc.dir}/dbspec/server" />
      <fileset dir="${repo.java.dir}">
        <include name="**/*.betwixt" />
        <include name="**/*.xml" />
      </fileset>
      <filterset>
        <filter token="buildNumber" value="${build.tstamp}" />
      </filterset>
    </copy>

  </target>

  <target name="compile-common" depends="init" description="">
    <md-compile srcdir="${common.java.dir}" destdir="${common.build.dir}" includes="fedora/common/**" />
    <jar jarfile="${common.build.dir}/fedora-common.jar" basedir="${common.build.dir}" excludes="fedora-common.jar" />
  </target>

  <target name="compile-generate" depends="init" description="">
    <md-compile srcdir="${generate.java.dir}" destdir="${generate.build.dir}" includes="fedora/generate/**" />
    <jar jarfile="${generate.build.dir}/fedora-generate.jar" basedir="${generate.build.dir}" excludes="fedora-generate.jar" />
  </target>


  <target name="compile-util" depends="init, compile-common" description="">
    <md-compile srcdir="${util.java.dir}" destdir="${util.build.dir}" includes="fedora/utilities/**" />
    <jar jarfile="${util.build.dir}/fedora-utilities.jar" basedir="${util.build.dir}" excludes="fedora-utilities.jar" />
  </target>

  <target name="server" depends="compile-common, compile-server" description="">
    <mkdir dir="${fedora.home.build.dir}/server/access" />
    <mkdir dir="${fedora.home.build.dir}/server/bin" />
    <mkdir dir="${fedora.home.build.dir}/server/config" />
    <mkdir dir="${fedora.home.build.dir}/server/management" />
    <mkdir dir="${fedora.home.build.dir}/server/schematron" />
    <mkdir dir="${fedora.home.build.dir}/server/xsd" />
    <mkdir dir="${fedora.home.build.dir}/server/fedora-internal-use/config" />
    <mkdir dir="${fedora.home.build.dir}/server/fedora-internal-use/deploy" />
    <mkdir dir="${fedora.home.build.dir}/server/fedora-internal-use/fedora-internal-use-backend-service-policies" />
    <mkdir dir="${fedora.home.build.dir}/server/fedora-internal-use/fedora-internal-use-repository-policies-approximating-2.0" />

    <copy file="${inc.dir}/truststore" todir="${fedora.home.build.dir}/server" />

    <copy todir="${fedora.home.build.dir}/server/access">
      <fileset dir="${xsl.src.dir}/access">
        <include name="*.xslt" />
      </fileset>
      <fileset file="${wsdl.src.dir}/Fedora-API-A.wsdl" />
      <fileset file="${wsdl.src.dir}/Fedora-API-A-LITE.wsdl" />
    </copy>

    <copy todir="${fedora.home.build.dir}/server/bin">
      <fileset dir="${repo.resrc.dir}/scripts/bat/server" />
      <fileset dir="${repo.resrc.dir}/scripts/sh/server" />
    </copy>

    <chmod perm="ugo+x" type="file">
      <fileset dir="${fedora.home.build.dir}/server/bin">
        <include name="*.sh" />
      </fileset>
    </chmod>

    <copy todir="${fedora.home.build.dir}/server/config">
      <fileset dir="${repo.resrc.dir}/fcfg/server">
        <include name="**/my.properties" />
        <include name="**/fedora-users.xml" />
      </fileset>
    </copy>

    <copy todir="${fedora.home.build.dir}/server/management">
      <fileset dir="${xsl.src.dir}/management">
        <include name="*.xslt" />
      </fileset>
      <fileset file="${wsdl.src.dir}/Fedora-API-M.wsdl" />
      <fileset file="${wsdl.src.dir}/Fedora-API-M-LITE.wsdl" />
    </copy>

    <copy todir="${fedora.home.build.dir}/server/schematron">
      <fileset dir="${repo.resrc.dir}/schematron">
        <include name="*.xml" />
        <include name="*.xslt" />
      </fileset>
    </copy>

    <copy todir="${fedora.home.build.dir}/server/xsd">
      <fileset dir="${wsdl.src.dir}">
        <include name="**/*.xsd" />
      </fileset>
      <fileset dir="${xsd.src.dir}">
        <include name="**/*.xsd" />
        <include name="**/*.dtd" />
      </fileset>
    </copy>

    <!-- Copy and modify Axis deployment files -->
    <copy file="${wsdl.build.dir}/fedora/server/management/deploy.wsdd" todir="${fedora.home.build.dir}/server/fedora-internal-use/deploy" />
    <copy file="${wsdl.build.dir}/fedora/server/access/deploy.wsdd" tofile="${fedora.home.build.dir}/server/fedora-internal-use/deploy/deployAPI-A.wsdd" />
    <copy file="${wsdl.build.dir}/fedora/server/management/undeploy.wsdd" todir="${fedora.home.build.dir}/server/fedora-internal-use/deploy" />
    <copy file="${wsdl.build.dir}/fedora/server/access/undeploy.wsdd" tofile="${fedora.home.build.dir}/server/fedora-internal-use/deploy/undeployAPI-A.wsdd" />
    <replace file="${fedora.home.build.dir}/server/fedora-internal-use/deploy/deploy.wsdd" token="Fedora-API-M-Port-SOAPHTTP" value="management" />
    <replace file="${fedora.home.build.dir}/server/fedora-internal-use/deploy/deployAPI-A.wsdd" token="Fedora-API-A-Port-SOAPHTTP" value="access" />
    <replace file="${fedora.home.build.dir}/server/fedora-internal-use/deploy/deploy.wsdd" token="*&quot;/&gt;" value="*&quot;/&gt;&lt;parameter name=&quot;scope&quot; value=&quot;application&quot;/&gt;" />
    <replace file="${fedora.home.build.dir}/server/fedora-internal-use/deploy/deployAPI-A.wsdd" token="*&quot;/&gt;" value="*&quot;/&gt;&lt;parameter name=&quot;scope&quot; value=&quot;application&quot;/&gt;" />
    <replace file="${fedora.home.build.dir}/server/fedora-internal-use/deploy/undeploy.wsdd" token="Fedora-API-M-Port-SOAPHTTP" value="management" />
    <replace file="${fedora.home.build.dir}/server/fedora-internal-use/deploy/undeployAPI-A.wsdd" token="Fedora-API-A-Port-SOAPHTTP" value="access" />

    <!-- xacml:  set up policy directories -->
    <copy file="${xacml.src.dir}/readme.txt" todir="${fedora.home.build.dir}/server/fedora-internal-use" />
    <copy file="${xacml.src.dir}/readme-design-choices.txt" todir="${fedora.home.build.dir}/server/fedora-internal-use" />
    <copy todir="${fedora.home.build.dir}/server/fedora-internal-use/fedora-internal-use-repository-policies-approximating-2.0">
      <fileset dir="${xacml.src.dir}/default/default-repository-policies-approximating-2.0" />
    </copy>

    <java classname="fedora.common.policy.Release2_1Namespace" classpath="${server.build.dir}/classes;${lib.openrdf-model};${lib.mulgara};${common.build.dir}" output="${fedora.home.build.dir}/server/fedora-internal-use/vocabulary.txt" />

    <copy file="${xsl.src.dir}/security/build-backend-policy.xsl" todir="${fedora.home.build.dir}/server/fedora-internal-use" />

    <!-- fedora configuration files -->
    <copy todir="${fedora.home.build.dir}/server/fedora-internal-use/config">
      <fileset dir="${repo.resrc.dir}/fcfg/server">
        <include name="**/fedora-base.fcfg" />
        <include name="**/fedora-*.properties" />
        <include name="**/logging.properties" />
        <include name="**/log4j.properties" />
        <include name="**/*.xml" />
        <exclude name="**/fedora-users.xml" />
      </fileset>
    </copy>

    <!-- copy initial setup defaults (in lieu of fedora-setup) -->
    <copy file="${fedora.home.build.dir}/server/fedora-internal-use/config/beSecurity-secure-apim.xml" tofile="${fedora.home.build.dir}/server/config/beSecurity.xml" />
    <copy file="${fedora.home.build.dir}/server/fedora-internal-use/config/log4j.properties" tofile="${fedora.home.build.dir}/server/config/log4j.properties" />
    <copy file="${fedora.home.build.dir}/server/fedora-internal-use/config/akubra-llstore.xml" tofile="${fedora.home.build.dir}/server/config/akubra-llstore.xml"/>
  </target>

  <target name="fedorahome" depends="server, client">
    <mkdir dir="${docs.build.dir}" />
    <zip destfile="${dist.dir}/fedorahome.zip">
      <fileset dir="${fedora.home.build.dir}" />
      <zipfileset dir="${docs.build.dir}" prefix="docs" />
      <zipfileset dir="${license.dir}" prefix="docs/license" />
    </zip>
  </target>

  <target name="war" depends="server" description="Build the Fedora Web Application aRchive">

    <mkdir dir="${fedora.war.build.dir}/WEB-INF/classes" />
    <mkdir dir="${fedora.war.build.dir}/WEB-INF/lib" />
    <mkdir dir="${fedora.war.build.dir}/images" />
    <mkdir dir="${fedora.war.build.dir}/ri" />

    <!-- Deploy API-M and API-A offline (updates existing server-config.wsdd) -->
    <java classname="org.apache.axis.utils.Admin" fork="true" dir="${fedora.war.build.dir}/WEB-INF">
      <arg value="server" />
      <arg value="${fedora.home.build.dir}/server/fedora-internal-use/deploy/deploy.wsdd" />
      <arg value="${fedora.home.build.dir}/server/fedora-internal-use/deploy/deployAPI-A.wsdd" />
      <classpath>
        <pathelement location="${server.build.dir}/classes" />
        <path refid="axis.classpath" />
      </classpath>
    </java>

    <copy file="${repo.resrc.dir}/images/server/newlogo2.jpg" todir="${fedora.war.build.dir}/images" />

    <copy todir="${fedora.war.build.dir}/ri">
      <fileset dir="${xsl.src.dir}/ri" />
    </copy>

    <copy todir="${fedora.war.build.dir}">
      <fileset dir="${war-fedora.src.dir}" />
    </copy>

    <copy todir="${fedora.war.build.dir}/WEB-INF/classes">
      <fileset dir="${server.build.dir}/classes" />
    </copy>

    <copy todir="${fedora.war.build.dir}/WEB-INF/lib">
      <fileset refid="server-libs.fileset" />
    </copy>

    <copy file="${common.build.dir}/fedora-common.jar" todir="${fedora.war.build.dir}/WEB-INF/lib" />

    <jar jarfile="${dist.dir}/fedora.war" basedir="${fedora.war.build.dir}">
      <manifest>
        <attribute name="Version" value="${fedora.version}" />
        <attribute name="Build" value="${build.tstamp}" />
        <attribute name="Built-By" value="${user.name}" />
      </manifest>
    </jar>
  </target>

  <target name="check-wsdl2java">
    <uptodate property="wsdl2java.uptodate" targetfile="${wsdl.build.dir}/Fedora-API-M.wsdl">
      <srcfiles dir="." includes="${wsdl.src.dir}/*.wsdl,
        ${xsd.src.dir}/*.xsd" />
    </uptodate>
  </target>

  <target name="wsdl2java" depends="init,check-wsdl2java" unless="wsdl2java.uptodate" description="Generate Java classes from WSDL for API-M and API-A">
    <mkdir dir="${wsdl.build.dir}" />
    <copy file="${wsdl.src.dir}/Fedora-API-M.wsdl" todir="${wsdl.build.dir}" />
    <copy file="${wsdl.src.dir}/Fedora-API-A.wsdl" todir="${wsdl.build.dir}" />
    <copy file="${wsdl.src.dir}/fedora-auditing.xsd" todir="${wsdl.build.dir}" />
    <copy file="${wsdl.src.dir}/fedora-behavior-bind.xsd" todir="${wsdl.build.dir}" />
    <copy file="${wsdl.src.dir}/fedora-types.xsd" todir="${wsdl.build.dir}" />
    <axis-wsdl2java output="${wsdl.build.dir}" serverside="true" skeletondeploy="true" url="${wsdl.build.dir}/Fedora-API-M.wsdl">
      <mapping namespace="http://www.fedora.info/definitions/1/0/api/" package="fedora.server.management" />
      <mapping namespace="http://www.fedora.info/definitions/1/0/auditing/" package="fedora.server.types.gen" />
      <mapping namespace="http://www.fedora.info/definitions/1/0/binding/" package="fedora.server.types.gen" />
      <mapping namespace="http://www.fedora.info/definitions/1/0/types/" package="fedora.server.types.gen" />
    </axis-wsdl2java>
    <axis-wsdl2java output="${wsdl.build.dir}" serverside="true" skeletondeploy="true" url="${wsdl.build.dir}/Fedora-API-A.wsdl">
      <mapping namespace="http://www.fedora.info/definitions/1/0/api/" package="fedora.server.access" />
      <mapping namespace="http://www.fedora.info/definitions/1/0/types/" package="fedora.server.types.gen" />
    </axis-wsdl2java>
  </target>

  <target name="demo-objects" depends="compile-server" unless="demo-objects.uptodate">
    <copy todir="${fedora.home.build.dir}/client/demo/foxml">
      <fileset dir="${demo.src.dir}/demo-objects/foxml" />
    </copy>
    <md-convert-objects outputDir="${fedora.home.build.dir}/client/demo/mets" serializer="fedora.server.storage.translation.METSFedoraExt1_1DOSerializer" pretty="true" />
    <md-convert-objects outputDir="${fedora.home.build.dir}/client/demo/atom" serializer="fedora.server.storage.translation.Atom1_1DOSerializer" pretty="true" />
    <md-convert-objects outputDir="${fedora.home.build.dir}/client/demo/atom-zip" serializer="fedora.server.storage.translation.AtomZip1_1DOSerializer" pretty="false" outExt="zip" />
  </target>

  <target name="client" depends="compile-client, client-jar, demo-objects, messaging-client" description="">
    <mkdir dir="${fedora.home.build.dir}/client/bin" />
    <mkdir dir="${fedora.home.build.dir}/client/demo/batch-demo/object-specifics" />
    <mkdir dir="${fedora.home.build.dir}/client/demo/batch-demo/objects" />
    <mkdir dir="${fedora.home.build.dir}/client/demo/foxml" />
    <mkdir dir="${fedora.home.build.dir}/client/demo/mets" />
    <mkdir dir="${fedora.home.build.dir}/client/demo/soapclient" />
    <mkdir dir="${fedora.home.build.dir}/client/lib" />

    <copy file="${inc.dir}/truststore" toFile="${fedora.home.build.dir}/client/truststore" />

    <copy file="${repo.resrc.dir}/xml/client-log4j.xml" toFile="${fedora.home.build.dir}/client/log4j.xml" />

    <copy todir="${fedora.home.build.dir}/client/lib">
      <fileset refid="client-libs.fileset" />
    </copy>

    <copy todir="${fedora.home.build.dir}/client/bin">
      <fileset dir="${repo.resrc.dir}/scripts/bat/client" />
      <fileset dir="${repo.resrc.dir}/scripts/sh/client" />
    </copy>

    <replace dir="${fedora.home.build.dir}/client/bin" token="fedora-client.jar" value="fedora-client-${fedora.version}.jar" />

    <chmod perm="ugo+x" type="file">
      <fileset dir="${fedora.home.build.dir}/client/bin">
        <include name="*.sh" />
      </fileset>
    </chmod>

    <!-- SOAP demo client (simple java reference client) -->
    <copy todir="${fedora.home.build.dir}/client/demo/soapclient">
      <fileset dir="${demo.src.dir}/demo-soapclient" />
    </copy>

    <replace dir="${fedora.home.build.dir}/client/demo/soapclient" token="fedora-client.jar" value="fedora-client-${fedora.version}.jar" />

    <replace dir="${fedora.home.build.dir}/client/bin" token="fedora-client.jar" value="fedora-client-${fedora.version}.jar" />

    <!-- Prepare batch demo-->
    <!-- Why are these being copied to lib? -->
    <copy file="${xsl.src.dir}/batchtool/mets-merge.xsl" todir="${fedora.home.build.dir}/client/lib" />
    <copy file="${xsl.src.dir}/batchtool/foxml-merge.xsl" todir="${fedora.home.build.dir}/client/lib" />

    <copy todir="${fedora.home.build.dir}/client/demo/batch-demo">
      <fileset dir="${demo.src.dir}/demo-objects/batch-demo" />
    </copy>
    <copy todir="${fedora.home.build.dir}/client/demo/batch-demo/object-specifics">
      <fileset dir="${repo.resrc.dir}/xml/batch-demo/object-specifics" />
    </copy>
  </target>

  <target name="client-jar" depends="compile-client" description="">
    <mkdir dir="${client.build.dir}/classes/images" />
    <mkdir dir="${fedora.home.build.dir}/client" />

    <copy todir="${client.build.dir}/classes/images">
      <fileset dir="${client.resrc.dir}/images/client" />
    </copy>

    <copy todir="${client.build.dir}/classes/batch">
      <fileset dir="${client.resrc.dir}/batch" />
      <filterset>
        <filter token="version" value="${fedora.version}" />
        <filter token="releaseDate" value="${fedora.releaseDate}" />
      </filterset>
    </copy>
 
    <copy todir="${client.build.dir}/classes/fedora">
      <fileset dir="${client.resrc.dir}/fedora" />
      <filterset>
        <filter token="version" value="${fedora.version}" />
        <filter token="releaseDate" value="${fedora.releaseDate}" />
      </filterset>
    </copy>

    <copy todir="${client.build.dir}/classes">
      <fileset dir="${resrc.dir}/server" />
      <filterset>
        <filter token="version" value="${fedora.version}" />
        <filter token="releaseDate" value="${fedora.releaseDate}" />
      </filterset>
    </copy>

    <!-- Create the client manifest classpath -->
    <pathconvert pathsep=" " property="client.mfs.classpath" refid="client-libs.path">
      <map from="${lib.dir}${file.separator}" to="lib/" />
    </pathconvert>

    <jar destfile="${fedora.home.build.dir}/client/fedora-client-${fedora.version}.jar" basedir="${client.build.dir}/classes">
      <manifest>
        <attribute name="Version" value="${fedora.version}" />
        <attribute name="Build" value="${build.tstamp}" />
        <attribute name="Built-By" value="${user.name}" />
        <attribute name="Main-Class" value="fedora.client.Administrator" />
        <attribute name="Class-Path" value="${client.mfs.classpath}" />
      </manifest>
    </jar>
  </target>

  <target name="rmi-journal-receiver-jar" depends="compile-server" description="">
  	<property name="journal.jar.name" value="RmiJournalReceiver-${fedora.version}.jar" />
  	
  	<mkdir dir="${journal.build.dir}" />
  	<mkdir dir="${journal.build.dir}/main" />
  	<mkdir dir="${journal.build.dir}/lib" />
  	<mkdir dir="${journal.build.dir}/boot" />
  	
  	<jar destfile="${journal.build.dir}/main/main.jar">
      <zipfileset dir="${server.build.dir}/classes/fedora/server/journal/readerwriter/multicast" 
                  prefix="fedora/server/journal/readerwriter/multicast/" includes="**/*.class"/>
      <zipfileset dir="${server.build.dir}/classes/fedora/server/journal" 
                  prefix="fedora/server/journal/"
                  includes="JournalException.class" />
      <manifest>
      	<attribute name="Main-Class" value="fedora.server.journal.readerwriter.multicast.rmi.RmiJournalReceiver" />
      </manifest>
  	</jar>
  	
  	<copy file="${lib.log4j}" todir="${journal.build.dir}/lib" />
  	<unjar src="${lib.one-jar}" dest="${journal.build.dir}/boot" />

  	<jar destfile="${journal.build.dir}/${journal.jar.name}">
  	  <manifest>
  	    <attribute name="Version" value="${fedora.version}" />
  	    <attribute name="Build" value="${build.tstamp}" />
  	    <attribute name="Built-By" value="${user.name}" />
  	    <attribute name="Main-Class" value="com.simontuffs.onejar.Boot" />
  	  </manifest>
  	  <fileset dir="${journal.build.dir}/boot" />
  	  <fileset dir="${journal.build.dir}" includes="main/** lib/**" />
  	</jar>
  	
  </target>

  <target name="rmi-journal-receiver" depends="rmi-journal-receiver-jar" description="">
  	<property name="journal.dist.name" value="RmiJournalReceiver-${fedora.version}" />
  	<zip destfile="${dist.dir}/${journal.dist.name}.zip">
  		<zipfileset dir="${journal.build.dir}" includes="RmiJournalReceiver-${fedora.version}.jar" prefix="${journal.dist.name}"/>
  		<zipfileset dir="${inc.dir}/journal" includes="*" prefix="${journal.dist.name}"/>
  	</zip>
  </target>
	
  <target name="localservices" depends="init, compile-localservices" description="">

    <path id="fop-libs.path">
      <pathelement location="${lib.avalon-framework}" />
      <pathelement location="${lib.batik}" />
      <pathelement location="${lib.fop}" />
    </path>
    <md-localservice service="fop" libs.path="fop-libs.path" />

    <path id="imagemanip-libs.path">
      <pathelement location="${lib.commons-codec}" />
      <pathelement location="${lib.commons-httpclient}" />
      <pathelement location="${lib.ij}" />
      <pathelement location="${lib.jai_codec}" />
      <pathelement location="${lib.jai_core}" />
    </path>
    <md-localservice service="imagemanip" libs.path="imagemanip-libs.path" />

    <path id="saxon-libs.path">
      <pathelement location="${lib.commons-codec}" />
      <pathelement location="${lib.commons-httpclient}" />
      <pathelement location="${lib.saxon}" />
    </path>
    <md-localservice service="saxon" libs.path="saxon-libs.path" />
  </target>

  <target name="check-stubwrappers">
    <uptodate property="stubwrappers.uptodate" targetfile="${stubwrappers.build.dir}/uptodate.txt">
      <srcfiles dir="." includes="${wsdl.build.dir}/**,
        ${repo.java.dir}/fedora/client/FedoraStubWrapper.template" />
    </uptodate>
  </target>

  <target name="stubwrappers" depends="init, compile-generate, wsdl2java, check-stubwrappers" unless="stubwrappers.uptodate" description="Builds API wrapper stubs">
    <!-- Stub wrapper for API-M -->
    <java classname="fedora.generate.BuildAxisStubWrapper" classpath="${generate.build.dir}/fedora-generate.jar">
      <arg path="${wsdl.build.dir}/fedora/server/management/FedoraAPIMBindingSOAPHTTPStub.java" />
      <arg path="${common.java.dir}/fedora/common/generate/FedoraStubWrapper.template" />
      <arg value="fedora.client" />
      <arg value="APIMStubWrapper" />
      <arg path="${stubwrappers.build.dir}/fedora/client/APIMStubWrapper.java" />
    </java>
    <!-- Stub wrapper for API-A -->
    <java classname="fedora.generate.BuildAxisStubWrapper" classpath="${generate.build.dir}/fedora-generate.jar">
      <arg path="${wsdl.build.dir}/fedora/server/access/FedoraAPIABindingSOAPHTTPStub.java" />
      <arg path="${common.java.dir}/fedora/common/generate/FedoraStubWrapper.template" />
      <arg value="fedora.client" />
      <arg value="APIAStubWrapper" />
      <arg path="${stubwrappers.build.dir}/fedora/client/APIAStubWrapper.java" />
    </java>
    <touch file="${stubwrappers.build.dir}/uptodate.txt" />
  </target>

  <target name="dist" depends="compile-common, fedorahome, war, localservices" />

  <target name="generatedCode" depends="stubwrappers" description="Builds all autogenerated code (e.g. WSDL)">
    <mkdir dir="${repo.build.dir}/generatedCode" />
    <copy todir="${common.build.dir}/generatedCode">
      <fileset dir="${stubwrappers.build.dir}">
        <include name="**/*.java" />
      </fileset>
    </copy>
    <copy todir="${repo.build.dir}/generatedCode">
      <fileset dir="${wsdl.build.dir}">
        <include name="**/*.java" />
        <exclude name="**/APIAStubWrapper.java" />
        <exclude name="**/APIMStubWrapper.java" />
        <exclude name="**/FedoraAPIABindingSOAPHTTPImpl.java" />
        <exclude name="**/FedoraAPIMBindingSOAPHTTPImpl.java" />
        <exclude name="**/FedoraAPIAServiceLocator.java" />
        <exclude name="**/FedoraAPIMServiceLocator.java" />
      </fileset>
    </copy>
  </target>

  <target name="docs" depends="init, wsdl2java, compile-util" description="Generate documentation">

    <!-- Build javadocs -->
    <mkdir dir="${docs.build.dir}/javadocs" />
    <javadoc packagenames="fedora.*" sourcepath="${repo.java.dir};${wsdl.build.dir}" maxmemory="256m" classpathref="compile.classpath" destdir="${docs.build.dir}/javadocs" author="true" version="true" use="true" />

    <copy todir="${docs.build.dir}/userdocs">
      <fileset dir="${docs.resrc.dir}/userdocs" />
    </copy>

  </target>

  <target name="compile-installer" depends="">
    <md-compile srcdir="${repo.java.dir}" destdir="${install.build.dir}" includes="fedora/utilities/install/**" />
    <copy todir="${install.build.dir}">
      <fileset dir="${repo.java.dir}">
        <include name="**/fedorausers-mapping.xml" />
        <include name="**/webxml-mapping.xml" />
      </fileset>
    </copy>
    <copy todir="${install.build.dir}">
      <fileset dir="${resrc.dir}/server">
        <include name="**/OptionDefinition.properties" />
      </fileset>
    </copy>


    <jar jarfile="${install.build.dir}/main.jar" basedir="${install.build.dir}" includes="fedora/**">
      <manifest>
        <attribute name="Main-Class" value="fedora.utilities.install.Installer" />
      </manifest>
    </jar>
  </target>

  <target name="installer" depends="war, fedorahome, compile-installer, localservices, demo" description="Builds an executable jar for installing the Fedora server">
    <loadproperties srcFile="${properties.src.dir}/install.properties" />

    <mkdir dir="${install.build.dir}/resources" />
    <copy todir="${install.build.dir}/resources">
      <fileset dir="${properties.src.dir}" includes="install.properties" />
      <fileset dir="${lib.dir}" includes="${install.jdbc.mckoi} ${install.jdbc.derby} ${install.jdbc.derbynetworkclient} ${install.jdbc.mysql} ${install.jdbc.postgresql}" />
      <fileset dir="${dist.dir}" includes="fedorahome.zip fedora.war fop.war imagemanip.war saxon.war fedora-demo.war" />
      <fileset dir="${inc.dir}" includes="${install.tomcat} keystore" />
      <fileset dir="${repo.resrc.dir}/dbspec/server/fedora/server/storage/resources" includes="DefaultDOManager.dbspec" />
    </copy>

    <mkdir dir="${install.build.dir}/boot" />
    <mkdir dir="${install.build.dir}/main" />
    <mkdir dir="${install.build.dir}/lib" />
    <copy file="${common.build.dir}/fedora-common.jar" todir="${install.build.dir}/lib" />
    <copy file="${lib.dom4j}" todir="${install.build.dir}/lib" />
    <copy file="${lib.jaxen}" todir="${install.build.dir}/lib" />
    <copy file="${lib.mulgara}" todir="${install.build.dir}/lib" />
    <copy file="${lib.log4j}" todir="${install.build.dir}/lib" />
    <copy file="${lib.commons-beanutils}" todir="${install.build.dir}/lib" />
    <copy file="${lib.commons-betwixt}" todir="${install.build.dir}/lib" />
    <copy file="${lib.commons-collections}" todir="${install.build.dir}/lib" />
    <copy file="${lib.commons-digester}" todir="${install.build.dir}/lib" />
    <copy file="${lib.commons-logging}" todir="${install.build.dir}/lib" />
    <copy file="${lib.openrdf-model}" todir="${install.build.dir}/lib" />
    <move file="${install.build.dir}/main.jar" todir="${install.build.dir}/main" />
    <unjar src="${lib.one-jar}" dest="${install.build.dir}/boot" />
    <jar jarfile="${dist.dir}/fedora-installer-${fedora.version}.jar">
      <manifest>
        <attribute name="Version" value="${fedora.version}" />
        <attribute name="Build" value="${build.tstamp}" />
        <attribute name="Built-By" value="${user.name}" />
        <attribute name="Main-Class" value="com.simontuffs.onejar.Boot" />
      </manifest>
      <fileset dir="${install.build.dir}/boot" />
      <fileset dir="${install.build.dir}" includes="main/** lib/** resources/**" />
    </jar>
  </target>

  <target name="junit-common" depends="compile-junit-common" description="run common-package junit tests">
    <copy todir="${common.junit.build.dir}" includeEmptyDirs="false">
      <fileset dir="${common.junit.dir}">
        <exclude name="**/*.java" />
      </fileset>
    </copy>

    <mkdir dir="common/build/test-results" />

    <junit printsummary="yes" fork="yes" failureproperty="test.failed" haltonerror="no" haltonfailure="no" showoutput="yes">
      <syspropertyset id="junit.sysproperties">
        <propertyref name="fedora.home" />
        <propertyref name="javax.net.ssl.trustStore" />
        <propertyref name="fedora.username" />
        <propertyref name="fedora.password" />
        <propertyref name="demo.format" />
        <propertyref name="org.apache.activemq.default.directory.prefix" />
      </syspropertyset>
      <classpath refid="junit.classpath" />
      <formatter type="xml" />
      <test name="${common.test}" outfile="common/build/test-results/result-${common.test}" />
    </junit>
    <echo>Test results are in common/build/test-results/</echo>
    <junitreport todir="common/build/test-results">
      <fileset dir="common/build/test-results">
        <include name="result-*.xml" />
      </fileset>
      <report format="frames" todir="common/build/test-results" />
    </junitreport>
    <fail if="test.failed"/> 
  </target>

  <target name="junit-client" depends="compile-junit-client" description="run client-package junit tests">
    <copy todir="${client.junit.build.dir}" includeEmptyDirs="false">
      <fileset dir="${client.junit.dir}">
        <exclude name="**/*.java" />
      </fileset>
    </copy>

    <mkdir dir="client/build/test-results" />

    <junit printsummary="yes" fork="yes" failureproperty="test.failed" haltonerror="no" haltonfailure="no" showoutput="yes">
      <syspropertyset id="junit.sysproperties">
        <propertyref name="fedora.home" />
        <propertyref name="javax.net.ssl.trustStore" />
        <propertyref name="fedora.username" />
        <propertyref name="fedora.password" />
        <propertyref name="demo.format" />
        <propertyref name="org.apache.activemq.default.directory.prefix" />
      </syspropertyset>
      <classpath refid="junit.classpath" />
      <formatter type="xml" />
      <test name="${client.test}" outfile="client/build/test-results/result-${client.test}" />
    </junit>
    <echo>Test results are in client/build/test-results/</echo>
    <junitreport todir="client/build/test-results">
      <fileset dir="client/build/test-results">
        <include name="result-*.xml" />
      </fileset>
      <report format="frames" todir="client/build/test-results" />
    </junitreport>
    <fail if="test.failed"/> 
  </target>
 
  <target name="junit" depends="compile-junit-inttest,demo-objects" description="run integrationtest-package junit tests">
    <copy todir="${inttest.junit.build.dir}/XACMLTestPolicies" includeEmptyDirs="false">
      <fileset dir="${inttest.junit.resrc.dir}/XACMLTestPolicies"/>
    </copy>

    <mkdir dir="integrationtest/build/test-results" />

    <junit printsummary="yes" fork="yes" failureproperty="test.failed" haltonerror="no" haltonfailure="no" showoutput="yes">
      <syspropertyset id="junit.sysproperties">
        <propertyref name="fedora.home" />
        <propertyref name="javax.net.ssl.trustStore" />
        <propertyref name="fedora.username" />
        <propertyref name="fedora.password" />
        <propertyref name="demo.format" />
        <propertyref name="org.apache.activemq.default.directory.prefix" />
      </syspropertyset>
      <classpath refid="junit.classpath" />
      <formatter type="xml" />
      <test name="${test}" outfile="integrationtest/build/test-results/result-${test}" />
    </junit>
    <echo>Test results are in integrationtest/build/test-results/</echo>
    <junitreport todir="integrationtest/build/test-results">
      <fileset dir="integrationtest/build/test-results">
        <include name="result-*.xml" />
      </fileset>
      <report format="frames" todir="integrationtest/build/test-results" />
    </junitreport>
    <fail if="test.failed"/> 
  </target>


  <target name="junit-server" depends="compile-junit,demo-objects">

    <copy todir="${junit.build.dir}" includeEmptyDirs="false">
      <fileset dir="${repo.junit.dir}">
        <exclude name="**/*.java" />
      </fileset>
    </copy>

    <mkdir dir="build/test-results" />

    <junit printsummary="yes" fork="yes" failureproperty="test.failed" haltonerror="no" haltonfailure="no" showoutput="yes">
      <syspropertyset id="junit.sysproperties">
        <propertyref name="fedora.home" />
        <propertyref name="javax.net.ssl.trustStore" />
        <propertyref name="fedora.username" />
        <propertyref name="fedora.password" />
        <propertyref name="demo.format" />
        <propertyref name="org.apache.activemq.default.directory.prefix" />
      </syspropertyset>
      <classpath refid="junit.classpath" />
      <formatter type="xml" />
      <test name="${server.test}" outfile="build/test-results/result-${server.test}" />
    </junit>
    <echo>Test results are in build/test-results/</echo>
    <junitreport todir="build/test-results">
      <fileset dir="build/test-results">
        <include name="result-*.xml" />
      </fileset>
      <report format="frames" todir="build/test-results" />
    </junitreport>
    <fail if="test.failed"/>
  </target>

  <target name="demo">
    <mkdir dir="${demo.war.build.dir}" />
    <copy todir="${demo.war.build.dir}">
      <fileset dir="${demo.src.dir}/demo-content" />
    </copy>
    <jar destfile="${dist.dir}/fedora-demo.war" basedir="${demo.war.build.dir}" />
  </target>

  <target name="src-release" depends="clean">
    <copy todir="${dist.dir}/release/fedora-src-${fedora.version}">
      <fileset dir=".">
        <exclude name="src/main/java/fedora/**/*.java" />
      </fileset>
    </copy>
    <!-- prepend license boilerplate to all Fedora java source code -->
    <copy todir="${dist.dir}/release/fedora-src-${fedora.version}">
      <fileset dir=".">
        <include name="src/main/java/fedora/**/*.java" />
      </fileset>
      <filterchain>
        <concatfilter prepend="${license.dir}/exhibitA-java.txt" />
      </filterchain>
    </copy>
    <zip zipfile="${dist.dir}/release/fedora-src-${fedora.version}.zip" basedir="${dist.dir}/release" includes="fedora-src-${fedora.version}/**" />
    <delete dir="${dist.dir}/release/fedora-src-${fedora.version}" />
  </target>

  <target name="release" depends="src-release, docs, installer" description="build source and binary releases, with checksums">
    <copy todir="${dist.dir}/release" file="${dist.dir}/fedora-installer-${fedora.version}.jar" />
    <checksum fileext=".md5">
      <fileset dir="${dist.dir}/release">
        <include name="*.zip" />
        <include name="*.jar" />
      </fileset>
    </checksum>
  </target>

  <target name="api-jar" depends="init">
    <mkdir dir="${api.build.dir}/classes" />
    <md-compile srcdir="${repo.java.dir}" destdir="${api.build.dir}/classes" includes="fedora/common/**,
      fedora/server/Context.java,
      fedora/server/ReadOnlyContext.java,
      fedora/server/access/Access.java,
      fedora/server/access/DefaultDisseminator.java,
      fedora/server/errors/**,
      fedora/server/management/Management.java,
      fedora/server/resourceIndex/ResourceIndex.java,
      fedora/server/search/Condition.java,
      fedora/server/search/FieldSearch.java,
      fedora/server/search/FieldSearchResult.java,
      fedora/server/search/ObjectFields.java,
      fedora/server/security/Authorization.java,
      fedora/server/security/BackendSecurity.java,
      fedora/server/storage/BDefReader.java,
      fedora/server/storage/BMechReader.java,
      fedora/server/storage/DOManager.java,
      fedora/server/storage/DOReader.java,
      fedora/server/storage/DOWriter.java,
      fedora/server/storage/ExternalContentManager.java,
      fedora/server/storage/RepositoryReader.java,
      fedora/server/storage/lowlevel/ILowlevelStorage.java,
      fedora/server/storage/lowlevel/IListable.java,
      fedora/server/storage/translation/DODeserializer.java,
      fedora/server/storage/translation/DOSerializer.java,
      fedora/server/storage/translation/DOTranslator.java,
      fedora/server/storage/validation/DOValidator.java,
      fedora/server/utilities/DateUtility.java,
      fedora/server/utilities/StreamUtility.java" />

    <jar destfile="${api.build.dir}/fedora-api-${fedora.version}.jar" basedir="${api.build.dir}/classes">
      <manifest>
        <attribute name="Version" value="${fedora.version}" />
        <attribute name="Build" value="${build.tstamp}" />
        <attribute name="Built-By" value="${user.name}" />
      </manifest>
    </jar>
  </target>

  <target name="messaging-client" depends="init">
    <mkdir dir="${client.build.dir}/messaging/classes" />
    <md-compile srcdir="${repo.java.dir}:${client.java.dir}" destdir="${client.build.dir}/messaging/classes" includes="fedora/client/messaging/**,
      fedora/server/messaging/APIMMessage.java,
      fedora/server/messaging/AtomAPIMMessage.java" />

    <copy todir="${client.build.dir}/messaging/classes">
      <fileset dir="${resrc.dir}/server" />
    </copy>

    <jar destfile="${client.build.dir}/messaging/fedora-messaging-client-${fedora.version}.jar" basedir="${client.build.dir}/messaging/classes">
      <manifest>
        <attribute name="Version" value="${fedora.version}" />
        <attribute name="Build" value="${build.tstamp}" />
        <attribute name="Built-By" value="${user.name}" />
      </manifest>
    </jar>

    <copy todir="${fedora.home.build.dir}/client">
      <fileset file="${client.build.dir}/messaging/fedora-messaging-client-${fedora.version}.jar" />
    </copy>

    <zip destfile="${dist.dir}/fedora-messaging-client.zip">
      <fileset file="${client.build.dir}/messaging/fedora-messaging-client-${fedora.version}.jar" />
      <fileset file="${lib.abdera-il8n}" />
      <fileset file="${lib.abdera.core}" />
      <fileset file="${lib.abdera.parser}" />
      <fileset file="${lib.activation}" />
      <fileset file="${lib.activemq-all}" />
      <fileset file="${lib.axiom-api}" />
      <fileset file="${lib.axiom-impl}" />
      <fileset file="${lib.dom4j}" />
      <fileset file="${lib.jaxen}" />
      <fileset file="${lib.log4j}" />
      <fileset file="${lib.staxapi}" />
      <fileset file="${lib.sjsxp}" />
    </zip>
  </target>

  <target name="performance-tests" depends="client">
    <java classname="fedora.client.test.PerformanceTests">
      <classpath>
        <pathelement path="${repo.build.dir}/client/classes" />
        <path refid="compile.classpath" />
      </classpath>
      <arg value="${host}" />
      <arg value="${port}" />
      <arg value="${username}" />
      <arg value="${password}" />
      <arg value="${iterations}" />
      <arg value="${threads}" />
      <arg value="${file}" />
      <arg value="${name}" />
      <arg value="${context}"/>
    </java>
  </target>

  <target name="scalability-tests" depends="client">
    <java classname="fedora.client.test.ScalabilityTests">
      <classpath>
        <pathelement path="${repo.build.dir}/client/classes" />
        <path refid="compile.classpath" />
      </classpath>
      <arg value="${host}" />
      <arg value="${port}" />
      <arg value="${username}" />
      <arg value="${password}" />
      <arg value="${batchsize}" />
      <arg value="${batches}" />
      <arg value="${threads}" />
      <arg value="${file}" />
      <arg value="${context}" />
    </java>
  </target>
</project>
