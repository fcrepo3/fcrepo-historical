<?xml version="1.0" encoding="UTF-8"?>
<project name="MelcoePDP" default="dist" basedir=".">

	<property environment="env" />
	<property name="src" value="src" />
	<property name="doc" value="doc" />
	<property name="lib" value="lib" />
	<property name="build" value="build" />
	<property name="base" value="base" />
	<property name="dist" value="dist" />
	<property name="jarfile" value="melcoe-pdp.jar" />
	<property name="aarfile" value="MelcoePDP.aar" />

	<path id="libs">
		<fileset dir="lib">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<target name="check.environment" description="checks that environment is suitable">
		<fail unless="env.MELCOEPDP_HOME" message="Environment Variable MELCOEPDP_HOME is not set. Please set this to where you would like this application to be installed." />
		<fail unless="env.DBXML_HOME" message="Environment Variable DBXML_HOME is not set. Please set this to where DBXML is installed." />
	</target>

	<target name="clean" description="remove necessary directories">
		<delete dir="${build}" />
		<delete dir="${dist}" />
		<delete dir="${doc}" />
		<delete file="${lib}/db.jar" />
		<delete file="${lib}/dbxml.jar" />
	</target>
	
	<target name="init" description="create necessary directories">
		<mkdir dir="${build}" />
		<mkdir dir="${dist}" />
		<mkdir dir="${doc}" />

		<condition property="install.tomcat.axis2.ok">
			<and>
				<isset property="env.CATALINA_HOME" />
				<available file="${env.CATALINA_HOME}/webapps/axis2" />
			</and>
		</condition>

		<condition property="uninstall.tomcat.axis2.ok">
			<and>
				<isset property="env.CATALINA_HOME" />
				<available file="${env.CATALINA_HOME}/webapps/axis2/WEB-INF/services/${aarfile}" />
			</and>
		</condition>

		<condition property="os.unix">
			<os family="unix" />
		</condition>

		<condition property="os.windows">
			<os family="windows" />
		</condition>
	</target>

	<target name="getDBXMLjars.windows" description="copy DBXML jar files" if="os.windows">
		<delete file="${lib}/db.jar" />
		<delete file="${lib}/dbxml.jar" />
		<copy file="${env.DBXML_HOME}/jar/db.jar" todir="${lib}" />
		<copy file="${env.DBXML_HOME}/jar/dbxml.jar" todir="${lib}" />
	</target>

	<target name="getDBXMLjars.unix" description="copy DBXML jar files" if="os.unix">
		<delete file="${lib}/db.jar" />
		<delete file="${lib}/dbxml.jar" />
		<copy file="${env.DBXML_HOME}/lib/db.jar" todir="${lib}" />
		<copy file="${env.DBXML_HOME}/lib/dbxml.jar" todir="${lib}" />
	</target>

	<target name="compile" depends="init,getDBXMLjars.unix, getDBXMLjars.windows" description="compile source">
		<javac srcdir="${src}" destdir="${build}" classpathref="libs" debug="true" />
		<copy todir="${build}">
			<fileset dir="${src}" excludes="**/*.java" />
		</copy>
	</target>

	<target name="dist" depends="compile" description="creates an Axis2 service archive and jar library">
		<jar destfile="${dist}/${jarfile}" basedir="${build}" />

		<mkdir dir="${build}/lib" />
		<copy todir="${build}/lib">
			<fileset dir="lib" />
		</copy>

		<copy todir="${build}">
			<fileset dir="${base}/service/MelcoePDP" />
		</copy>

		<jar destfile="${dist}/${aarfile}" basedir="${build}" />
		
		<copy todir="dist">
			<fileset file="axis2/axis2.war" />
		</copy>

		<mkdir dir="tmp/WEB-INF/services" />

		<copy todir="tmp/WEB-INF/services">
			<fileset file="${dist}/${aarfile}" />
		</copy>

		<jar destfile="dist/axis2.war" index="true" update="true">
			<fileset dir="tmp"/>
		</jar>

		<delete dir="tmp"/>
	</target>

	<target name="dist.doc" depends="init">
		<javadoc packagenames="melcoe.*" sourcepath="${src}" destdir="${doc}" author="true" classpathref="libs" version="true" use="true" windowtitle="MELCOE PDP">
			<link href="http://java.sun.com/j2se/1.5.0/docs/api/" />
		</javadoc>
	</target>

	<target name="install.doc" depends="dist.doc">
		<mkdir dir="${env.MELCOEPDP_HOME}/doc" />

		<copy todir="${env.MELCOEPDP_HOME}/doc">
			<fileset dir="${doc}" />
		</copy>
	</target>

	<target name="install.melcoe-pdp" depends="dist,dist.doc">
		<mkdir dir="${env.MELCOEPDP_HOME}" />
		<mkdir dir="${env.MELCOEPDP_HOME}/axis2" />
		<mkdir dir="${env.MELCOEPDP_HOME}/jar" />

		<copy todir="${env.MELCOEPDP_HOME}">
			<fileset dir="${base}/home" />
		</copy>

		<copy todir="${env.MELCOEPDP_HOME}/axis2">
			<fileset file="${dist}/MelcoePDP.aar" />
		</copy>

		<copy todir="${env.MELCOEPDP_HOME}/jar">
			<fileset file="${dist}/${aarfile}" />
		</copy>

	</target>

	<target name="install.web-service" depends="install.melcoe-pdp" if="install.tomcat.axis2.ok">
		<copy todir="${env.CATALINA_HOME}/webapps/axis2/WEB-INF/services">
			<fileset file="${dist}/MelcoePDP.aar" />
		</copy>
	</target>

	<target name="install" depends="install.melcoe-pdp,install.doc,install.web-service" description="installs the MelcoePDP" />

	<target name="load-policies" depends="check.environment" description="loads policies">
		<java classname="melcoe.xacml.util.PopulatePolicyDatabase" classpathref="libs">
			<classpath>
				<pathelement path="${build}" />
			</classpath>
		</java>
	</target>

	<target name="uninstall.melcoe-pdp" depends="init,check.environment">
		<delete dir="${env.MELCOEPDP_HOME}" />
	</target>

	<target name="uninstall.web-service" depends="init,check.environment" if="uninstall.tomcat.axis2.ok">
		<delete file="${env.CATALINA_HOME}/webapps/axis2/WEB-INF/services/${aarfile}" />
	</target>

	<target name="uninstall" depends="uninstall.web-service,uninstall.melcoe-pdp" description="removes the installation directory">
		<echo />
		<echo />
		<echo>You should restart your application server.</echo>
		<echo />
		<echo />
	</target>

</project>
