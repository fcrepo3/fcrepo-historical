package com.rolemodelsoft.drawlet;

/**
 * @(#)PropertyChangeRevealer.java
 *
 * Copyright (c) 1998-2001 RoleModel Software, Inc. (RMS). All Rights Reserved.
 *
 * Permission to use, copy, modify, and distribute this software
 * and its documentation for NON-COMMERCIAL purposes and without
 * fee is hereby granted provided that this copyright notice
 * appears in all copies.
 *
 * RMS MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY OF
 * THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
 * TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 * PARTICULAR PURPOSE, OR NON-INFRINGEMENT. RMS SHALL NOT BE LIABLE FOR
 * ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR
 * DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES.
 */

import java.beans.*;

/**
 * A utility class to allow tests to access property change events.
 *
 * @version 	1.1.6, 12/30/98
 */

public class PropertyChangeRevealer implements PropertyChangeListener {
	/**
	 * the most recent property change event generated by the subject
	 */
	PropertyChangeEvent propertyChangeEvent = null;

	int eventCount = 0;
	/**
	 * Set the event count to 0.
	 */
	public void clearEventCount()  {
		eventCount = 0;
	}
	/**
	 * Set the event count to 0.
	 */
	public int getEventCount()  {
		return eventCount;
	}
	/**
	 * @return the PropertyChangeEvent last heard.
	 */
	public PropertyChangeEvent getPropertyChangeEvent() {
		return propertyChangeEvent;
	}
	/**
	 * Catch PropertyChangeEvent's.
	 *
	 * evt the event
	 */
	public void propertyChange(PropertyChangeEvent evt)  {
		eventCount++;
		propertyChangeEvent = evt ;
	}
}
